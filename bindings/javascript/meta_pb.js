/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var vector_pb = require('./vector_pb.js');
goog.object.extend(proto, vector_pb);
var spatial_pb = require('./spatial_pb.js');
goog.object.extend(proto, spatial_pb);
goog.exportSymbol('proto.Messages.GraphicsControl', null, global);
goog.exportSymbol('proto.Messages.Meta', null, global);
goog.exportSymbol('proto.Messages.Representation', null, global);
goog.exportSymbol('proto.Messages.SliceControl', null, global);
goog.exportSymbol('proto.Messages.TracersControl', null, global);
goog.exportSymbol('proto.Messages.Visual', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.Representation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.Representation.repeatedFields_, null);
};
goog.inherits(proto.Messages.Representation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.Representation.displayName = 'proto.Messages.Representation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.Visual = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.Visual.repeatedFields_, null);
};
goog.inherits(proto.Messages.Visual, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.Visual.displayName = 'proto.Messages.Visual';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.GraphicsControl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.GraphicsControl.repeatedFields_, null);
};
goog.inherits(proto.Messages.GraphicsControl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.GraphicsControl.displayName = 'proto.Messages.GraphicsControl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.SliceControl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.SliceControl.repeatedFields_, null);
};
goog.inherits(proto.Messages.SliceControl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.SliceControl.displayName = 'proto.Messages.SliceControl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.TracersControl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.TracersControl.repeatedFields_, null);
};
goog.inherits(proto.Messages.TracersControl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.TracersControl.displayName = 'proto.Messages.TracersControl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.Meta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.Meta.repeatedFields_, null);
};
goog.inherits(proto.Messages.Meta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.Meta.displayName = 'proto.Messages.Meta';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.Representation.repeatedFields_ = [10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.Representation.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.Representation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.Representation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.Representation.toObject = function(includeInstance, msg) {
  var f, obj = {
    propertyKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    colorMap: jspb.Message.getFieldWithDefault(msg, 2, 0),
    component: jspb.Message.getFieldWithDefault(msg, 3, 0),
    autoRange: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    useDefaultKey: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    colorOutOfRange: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    useMagnitude: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    showDisplacement: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    rangeList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 10)) == null ? undefined : f,
    displacementScaleList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.Representation}
 */
proto.Messages.Representation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.Representation;
  return proto.Messages.Representation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.Representation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.Representation}
 */
proto.Messages.Representation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPropertyKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColorMap(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setComponent(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoRange(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseDefaultKey(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setColorOutOfRange(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseMagnitude(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowDisplacement(value);
      break;
    case 10:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setRangeList(value);
      break;
    case 11:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setDisplacementScaleList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.Representation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.Representation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.Representation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.Representation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPropertyKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColorMap();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getComponent();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getAutoRange();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getUseDefaultKey();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getColorOutOfRange();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getUseMagnitude();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getShowDisplacement();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getRangeList();
  if (f.length > 0) {
    writer.writePackedFloat(
      10,
      f
    );
  }
  f = message.getDisplacementScaleList();
  if (f.length > 0) {
    writer.writePackedFloat(
      11,
      f
    );
  }
};


/**
 * optional string property_key = 1;
 * @return {string}
 */
proto.Messages.Representation.prototype.getPropertyKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Messages.Representation.prototype.setPropertyKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 color_map = 2;
 * @return {number}
 */
proto.Messages.Representation.prototype.getColorMap = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.Representation.prototype.setColorMap = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 component = 3;
 * @return {number}
 */
proto.Messages.Representation.prototype.getComponent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.Messages.Representation.prototype.setComponent = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool auto_range = 4;
 * @return {boolean}
 */
proto.Messages.Representation.prototype.getAutoRange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.Messages.Representation.prototype.setAutoRange = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool use_default_key = 5;
 * @return {boolean}
 */
proto.Messages.Representation.prototype.getUseDefaultKey = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.Messages.Representation.prototype.setUseDefaultKey = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool color_out_of_range = 6;
 * @return {boolean}
 */
proto.Messages.Representation.prototype.getColorOutOfRange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.Messages.Representation.prototype.setColorOutOfRange = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool use_magnitude = 7;
 * @return {boolean}
 */
proto.Messages.Representation.prototype.getUseMagnitude = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.Messages.Representation.prototype.setUseMagnitude = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool show_displacement = 8;
 * @return {boolean}
 */
proto.Messages.Representation.prototype.getShowDisplacement = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.Messages.Representation.prototype.setShowDisplacement = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * repeated float range = 10;
 * @return {!Array<number>}
 */
proto.Messages.Representation.prototype.getRangeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 10));
};


/** @param {!Array<number>} value */
proto.Messages.Representation.prototype.setRangeList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Representation.prototype.addRange = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Representation.prototype.clearRangeList = function() {
  this.setRangeList([]);
};


/**
 * repeated float displacement_scale = 11;
 * @return {!Array<number>}
 */
proto.Messages.Representation.prototype.getDisplacementScaleList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 11));
};


/** @param {!Array<number>} value */
proto.Messages.Representation.prototype.setDisplacementScaleList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Representation.prototype.addDisplacementScale = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Representation.prototype.clearDisplacementScaleList = function() {
  this.setDisplacementScaleList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.Visual.repeatedFields_ = [4,5,6,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.Visual.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.Visual.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.Visual} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.Visual.toObject = function(includeInstance, msg) {
  var f, obj = {
    region: (f = msg.getRegion()) && spatial_pb.Zone.toObject(includeInstance, f),
    representation: (f = msg.getRepresentation()) && proto.Messages.Representation.toObject(includeInstance, f),
    style: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pointsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    linesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    trianglesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    indicesPerElementList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    elementsToIndicesList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    indicesToElementsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.Visual}
 */
proto.Messages.Visual.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.Visual;
  return proto.Messages.Visual.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.Visual} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.Visual}
 */
proto.Messages.Visual.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new spatial_pb.Zone;
      reader.readMessage(value,spatial_pb.Zone.deserializeBinaryFromReader);
      msg.setRegion(value);
      break;
    case 2:
      var value = new proto.Messages.Representation;
      reader.readMessage(value,proto.Messages.Representation.deserializeBinaryFromReader);
      msg.setRepresentation(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStyle(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setPointsList(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setLinesList(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setTrianglesList(value);
      break;
    case 8:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setIndicesPerElementList(value);
      break;
    case 9:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setElementsToIndicesList(value);
      break;
    case 10:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setIndicesToElementsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.Visual.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.Visual.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.Visual} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.Visual.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      spatial_pb.Zone.serializeBinaryToWriter
    );
  }
  f = message.getRepresentation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.Messages.Representation.serializeBinaryToWriter
    );
  }
  f = message.getStyle();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getLinesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      5,
      f
    );
  }
  f = message.getTrianglesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      6,
      f
    );
  }
  f = message.getIndicesPerElementList();
  if (f.length > 0) {
    writer.writePackedInt32(
      8,
      f
    );
  }
  f = message.getElementsToIndicesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      9,
      f
    );
  }
  f = message.getIndicesToElementsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      10,
      f
    );
  }
};


/**
 * optional Zone region = 1;
 * @return {?proto.Messages.Zone}
 */
proto.Messages.Visual.prototype.getRegion = function() {
  return /** @type{?proto.Messages.Zone} */ (
    jspb.Message.getWrapperField(this, spatial_pb.Zone, 1));
};


/** @param {?proto.Messages.Zone|undefined} value */
proto.Messages.Visual.prototype.setRegion = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.Messages.Visual.prototype.clearRegion = function() {
  this.setRegion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Visual.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Representation representation = 2;
 * @return {?proto.Messages.Representation}
 */
proto.Messages.Visual.prototype.getRepresentation = function() {
  return /** @type{?proto.Messages.Representation} */ (
    jspb.Message.getWrapperField(this, proto.Messages.Representation, 2));
};


/** @param {?proto.Messages.Representation|undefined} value */
proto.Messages.Visual.prototype.setRepresentation = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.Messages.Visual.prototype.clearRepresentation = function() {
  this.setRepresentation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Visual.prototype.hasRepresentation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 style = 3;
 * @return {number}
 */
proto.Messages.Visual.prototype.getStyle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.Messages.Visual.prototype.setStyle = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated int32 points = 4;
 * @return {!Array<number>}
 */
proto.Messages.Visual.prototype.getPointsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<number>} value */
proto.Messages.Visual.prototype.setPointsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Visual.prototype.addPoints = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Visual.prototype.clearPointsList = function() {
  this.setPointsList([]);
};


/**
 * repeated int32 lines = 5;
 * @return {!Array<number>}
 */
proto.Messages.Visual.prototype.getLinesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<number>} value */
proto.Messages.Visual.prototype.setLinesList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Visual.prototype.addLines = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Visual.prototype.clearLinesList = function() {
  this.setLinesList([]);
};


/**
 * repeated int32 triangles = 6;
 * @return {!Array<number>}
 */
proto.Messages.Visual.prototype.getTrianglesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<number>} value */
proto.Messages.Visual.prototype.setTrianglesList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Visual.prototype.addTriangles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Visual.prototype.clearTrianglesList = function() {
  this.setTrianglesList([]);
};


/**
 * repeated int32 indices_per_element = 8;
 * @return {!Array<number>}
 */
proto.Messages.Visual.prototype.getIndicesPerElementList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<number>} value */
proto.Messages.Visual.prototype.setIndicesPerElementList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Visual.prototype.addIndicesPerElement = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Visual.prototype.clearIndicesPerElementList = function() {
  this.setIndicesPerElementList([]);
};


/**
 * repeated int32 elements_to_indices = 9;
 * @return {!Array<number>}
 */
proto.Messages.Visual.prototype.getElementsToIndicesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<number>} value */
proto.Messages.Visual.prototype.setElementsToIndicesList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Visual.prototype.addElementsToIndices = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Visual.prototype.clearElementsToIndicesList = function() {
  this.setElementsToIndicesList([]);
};


/**
 * repeated int32 indices_to_elements = 10;
 * @return {!Array<number>}
 */
proto.Messages.Visual.prototype.getIndicesToElementsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<number>} value */
proto.Messages.Visual.prototype.setIndicesToElementsList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Visual.prototype.addIndicesToElements = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Visual.prototype.clearIndicesToElementsList = function() {
  this.setIndicesToElementsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.GraphicsControl.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.GraphicsControl.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.GraphicsControl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.GraphicsControl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.GraphicsControl.toObject = function(includeInstance, msg) {
  var f, obj = {
    style: jspb.Message.getFieldWithDefault(msg, 1, 0),
    encoding: jspb.Message.getFieldWithDefault(msg, 2, 0),
    colorList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 4)) == null ? undefined : f,
    alpha: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    pointWidth: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    lineWidth: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    visible: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    overlay: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.GraphicsControl}
 */
proto.Messages.GraphicsControl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.GraphicsControl;
  return proto.Messages.GraphicsControl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.GraphicsControl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.GraphicsControl}
 */
proto.Messages.GraphicsControl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStyle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEncoding(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setColorList(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAlpha(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPointWidth(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLineWidth(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVisible(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverlay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.GraphicsControl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.GraphicsControl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.GraphicsControl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.GraphicsControl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStyle();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getEncoding();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getColorList();
  if (f.length > 0) {
    writer.writePackedFloat(
      4,
      f
    );
  }
  f = message.getAlpha();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getPointWidth();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getLineWidth();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getVisible();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getOverlay();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional int32 style = 1;
 * @return {number}
 */
proto.Messages.GraphicsControl.prototype.getStyle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.Messages.GraphicsControl.prototype.setStyle = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 encoding = 2;
 * @return {number}
 */
proto.Messages.GraphicsControl.prototype.getEncoding = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.GraphicsControl.prototype.setEncoding = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated float color = 4;
 * @return {!Array<number>}
 */
proto.Messages.GraphicsControl.prototype.getColorList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/** @param {!Array<number>} value */
proto.Messages.GraphicsControl.prototype.setColorList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.GraphicsControl.prototype.addColor = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.GraphicsControl.prototype.clearColorList = function() {
  this.setColorList([]);
};


/**
 * optional float alpha = 5;
 * @return {number}
 */
proto.Messages.GraphicsControl.prototype.getAlpha = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.Messages.GraphicsControl.prototype.setAlpha = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float point_width = 6;
 * @return {number}
 */
proto.Messages.GraphicsControl.prototype.getPointWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.Messages.GraphicsControl.prototype.setPointWidth = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float line_width = 7;
 * @return {number}
 */
proto.Messages.GraphicsControl.prototype.getLineWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.Messages.GraphicsControl.prototype.setLineWidth = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional bool visible = 10;
 * @return {boolean}
 */
proto.Messages.GraphicsControl.prototype.getVisible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.Messages.GraphicsControl.prototype.setVisible = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool overlay = 11;
 * @return {boolean}
 */
proto.Messages.GraphicsControl.prototype.getOverlay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.Messages.GraphicsControl.prototype.setOverlay = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.SliceControl.repeatedFields_ = [8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.SliceControl.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.SliceControl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.SliceControl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.SliceControl.toObject = function(includeInstance, msg) {
  var f, obj = {
    visual: (f = msg.getVisual()) && proto.Messages.Visual.toObject(includeInstance, f),
    intersect: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    negative: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    positive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    centerList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 8)) == null ? undefined : f,
    normalList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.SliceControl}
 */
proto.Messages.SliceControl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.SliceControl;
  return proto.Messages.SliceControl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.SliceControl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.SliceControl}
 */
proto.Messages.SliceControl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Messages.Visual;
      reader.readMessage(value,proto.Messages.Visual.deserializeBinaryFromReader);
      msg.setVisual(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIntersect(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNegative(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPositive(value);
      break;
    case 8:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setCenterList(value);
      break;
    case 9:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setNormalList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.SliceControl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.SliceControl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.SliceControl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.SliceControl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVisual();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Messages.Visual.serializeBinaryToWriter
    );
  }
  f = message.getIntersect();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getNegative();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getPositive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCenterList();
  if (f.length > 0) {
    writer.writePackedDouble(
      8,
      f
    );
  }
  f = message.getNormalList();
  if (f.length > 0) {
    writer.writePackedDouble(
      9,
      f
    );
  }
};


/**
 * optional Visual visual = 1;
 * @return {?proto.Messages.Visual}
 */
proto.Messages.SliceControl.prototype.getVisual = function() {
  return /** @type{?proto.Messages.Visual} */ (
    jspb.Message.getWrapperField(this, proto.Messages.Visual, 1));
};


/** @param {?proto.Messages.Visual|undefined} value */
proto.Messages.SliceControl.prototype.setVisual = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.Messages.SliceControl.prototype.clearVisual = function() {
  this.setVisual(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.SliceControl.prototype.hasVisual = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool intersect = 3;
 * @return {boolean}
 */
proto.Messages.SliceControl.prototype.getIntersect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.Messages.SliceControl.prototype.setIntersect = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool negative = 4;
 * @return {boolean}
 */
proto.Messages.SliceControl.prototype.getNegative = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.Messages.SliceControl.prototype.setNegative = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool positive = 5;
 * @return {boolean}
 */
proto.Messages.SliceControl.prototype.getPositive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.Messages.SliceControl.prototype.setPositive = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated double center = 8;
 * @return {!Array<number>}
 */
proto.Messages.SliceControl.prototype.getCenterList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/** @param {!Array<number>} value */
proto.Messages.SliceControl.prototype.setCenterList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.SliceControl.prototype.addCenter = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.SliceControl.prototype.clearCenterList = function() {
  this.setCenterList([]);
};


/**
 * repeated double normal = 9;
 * @return {!Array<number>}
 */
proto.Messages.SliceControl.prototype.getNormalList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 9));
};


/** @param {!Array<number>} value */
proto.Messages.SliceControl.prototype.setNormalList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.SliceControl.prototype.addNormal = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.SliceControl.prototype.clearNormalList = function() {
  this.setNormalList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.TracersControl.repeatedFields_ = [5,6,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.TracersControl.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.TracersControl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.TracersControl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.TracersControl.toObject = function(includeInstance, msg) {
  var f, obj = {
    visual: (f = msg.getVisual()) && proto.Messages.Visual.toObject(includeInstance, f),
    particleCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    seed: jspb.Message.getFieldWithDefault(msg, 4, 0),
    spawnRegionList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    regenRegionList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    userDefinedPositionsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.TracersControl}
 */
proto.Messages.TracersControl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.TracersControl;
  return proto.Messages.TracersControl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.TracersControl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.TracersControl}
 */
proto.Messages.TracersControl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Messages.Visual;
      reader.readMessage(value,proto.Messages.Visual.deserializeBinaryFromReader);
      msg.setVisual(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParticleCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeed(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setSpawnRegionList(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setRegenRegionList(value);
      break;
    case 8:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setUserDefinedPositionsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.TracersControl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.TracersControl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.TracersControl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.TracersControl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVisual();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Messages.Visual.serializeBinaryToWriter
    );
  }
  f = message.getParticleCount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getSeed();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSpawnRegionList();
  if (f.length > 0) {
    writer.writePackedInt32(
      5,
      f
    );
  }
  f = message.getRegenRegionList();
  if (f.length > 0) {
    writer.writePackedInt32(
      6,
      f
    );
  }
  f = message.getUserDefinedPositionsList();
  if (f.length > 0) {
    writer.writePackedFloat(
      8,
      f
    );
  }
};


/**
 * optional Visual visual = 1;
 * @return {?proto.Messages.Visual}
 */
proto.Messages.TracersControl.prototype.getVisual = function() {
  return /** @type{?proto.Messages.Visual} */ (
    jspb.Message.getWrapperField(this, proto.Messages.Visual, 1));
};


/** @param {?proto.Messages.Visual|undefined} value */
proto.Messages.TracersControl.prototype.setVisual = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.Messages.TracersControl.prototype.clearVisual = function() {
  this.setVisual(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.TracersControl.prototype.hasVisual = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 particle_count = 3;
 * @return {number}
 */
proto.Messages.TracersControl.prototype.getParticleCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.Messages.TracersControl.prototype.setParticleCount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 seed = 4;
 * @return {number}
 */
proto.Messages.TracersControl.prototype.getSeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Messages.TracersControl.prototype.setSeed = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated int32 spawn_region = 5;
 * @return {!Array<number>}
 */
proto.Messages.TracersControl.prototype.getSpawnRegionList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<number>} value */
proto.Messages.TracersControl.prototype.setSpawnRegionList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.TracersControl.prototype.addSpawnRegion = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.TracersControl.prototype.clearSpawnRegionList = function() {
  this.setSpawnRegionList([]);
};


/**
 * repeated int32 regen_region = 6;
 * @return {!Array<number>}
 */
proto.Messages.TracersControl.prototype.getRegenRegionList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<number>} value */
proto.Messages.TracersControl.prototype.setRegenRegionList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.TracersControl.prototype.addRegenRegion = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.TracersControl.prototype.clearRegenRegionList = function() {
  this.setRegenRegionList([]);
};


/**
 * repeated float user_defined_positions = 8;
 * @return {!Array<number>}
 */
proto.Messages.TracersControl.prototype.getUserDefinedPositionsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/** @param {!Array<number>} value */
proto.Messages.TracersControl.prototype.setUserDefinedPositionsList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.TracersControl.prototype.addUserDefinedPositions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.TracersControl.prototype.clearUserDefinedPositionsList = function() {
  this.setUserDefinedPositionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.Meta.repeatedFields_ = [25,26,27,28,29,30,31];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.Meta.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.Meta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.Meta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.Meta.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 2, ""),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    comments: jspb.Message.getFieldWithDefault(msg, 4, ""),
    series: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sysInfo: jspb.Message.getFieldWithDefault(msg, 6, ""),
    geomInfo: jspb.Message.getFieldWithDefault(msg, 7, ""),
    directory: jspb.Message.getFieldWithDefault(msg, 8, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    parent: jspb.Message.getFieldWithDefault(msg, 10, 0),
    created: jspb.Message.getFieldWithDefault(msg, 11, 0),
    saved: jspb.Message.getFieldWithDefault(msg, 12, 0),
    modified: jspb.Message.getFieldWithDefault(msg, 13, 0),
    iteration: jspb.Message.getFieldWithDefault(msg, 14, 0),
    saveInterval: jspb.Message.getFieldWithDefault(msg, 15, 0),
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    locked: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    autoSave: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    revision: (f = msg.getRevision()) && vector_pb.Revision.toObject(includeInstance, f),
    version: (f = msg.getVersion()) && vector_pb.Revision.toObject(includeInstance, f),
    bounds: (f = msg.getBounds()) && vector_pb.Extrema.toObject(includeInstance, f),
    appearance: (f = msg.getAppearance()) && proto.Messages.GraphicsControl.toObject(includeInstance, f),
    childrenList: (f = jspb.Message.getRepeatedField(msg, 25)) == null ? undefined : f,
    groupsList: (f = jspb.Message.getRepeatedField(msg, 26)) == null ? undefined : f,
    loopsList: (f = jspb.Message.getRepeatedField(msg, 27)) == null ? undefined : f,
    surfacesList: (f = jspb.Message.getRepeatedField(msg, 28)) == null ? undefined : f,
    volumesList: (f = jspb.Message.getRepeatedField(msg, 29)) == null ? undefined : f,
    modelTransformList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 30)) == null ? undefined : f,
    propertiesList: (f = jspb.Message.getRepeatedField(msg, 31)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.Meta}
 */
proto.Messages.Meta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.Meta;
  return proto.Messages.Meta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.Meta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.Meta}
 */
proto.Messages.Meta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setComments(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeries(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSysInfo(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeomInfo(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectory(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParent(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreated(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSaved(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModified(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIteration(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSaveInterval(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocked(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoSave(value);
      break;
    case 20:
      var value = new vector_pb.Revision;
      reader.readMessage(value,vector_pb.Revision.deserializeBinaryFromReader);
      msg.setRevision(value);
      break;
    case 21:
      var value = new vector_pb.Revision;
      reader.readMessage(value,vector_pb.Revision.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    case 22:
      var value = new vector_pb.Extrema;
      reader.readMessage(value,vector_pb.Extrema.deserializeBinaryFromReader);
      msg.setBounds(value);
      break;
    case 24:
      var value = new proto.Messages.GraphicsControl;
      reader.readMessage(value,proto.Messages.GraphicsControl.deserializeBinaryFromReader);
      msg.setAppearance(value);
      break;
    case 25:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setChildrenList(value);
      break;
    case 26:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setGroupsList(value);
      break;
    case 27:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setLoopsList(value);
      break;
    case 28:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setSurfacesList(value);
      break;
    case 29:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setVolumesList(value);
      break;
    case 30:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setModelTransformList(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.addProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.Meta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.Meta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.Meta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.Meta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getComments();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSeries();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSysInfo();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGeomInfo();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDirectory();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUid();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getParent();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getCreated();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getSaved();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getModified();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getIteration();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getSaveInterval();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getLocked();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getAutoSave();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getRevision();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      vector_pb.Revision.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      vector_pb.Revision.serializeBinaryToWriter
    );
  }
  f = message.getBounds();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      vector_pb.Extrema.serializeBinaryToWriter
    );
  }
  f = message.getAppearance();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.Messages.GraphicsControl.serializeBinaryToWriter
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writePackedInt64(
      25,
      f
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      26,
      f
    );
  }
  f = message.getLoopsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      27,
      f
    );
  }
  f = message.getSurfacesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      28,
      f
    );
  }
  f = message.getVolumesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      29,
      f
    );
  }
  f = message.getModelTransformList();
  if (f.length > 0) {
    writer.writePackedDouble(
      30,
      f
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      31,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.Messages.Meta.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Messages.Meta.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string icon = 2;
 * @return {string}
 */
proto.Messages.Meta.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Messages.Meta.prototype.setIcon = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.Messages.Meta.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Messages.Meta.prototype.setOwner = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string comments = 4;
 * @return {string}
 */
proto.Messages.Meta.prototype.getComments = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.Messages.Meta.prototype.setComments = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string series = 5;
 * @return {string}
 */
proto.Messages.Meta.prototype.getSeries = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.Messages.Meta.prototype.setSeries = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string sys_info = 6;
 * @return {string}
 */
proto.Messages.Meta.prototype.getSysInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.Messages.Meta.prototype.setSysInfo = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string geom_info = 7;
 * @return {string}
 */
proto.Messages.Meta.prototype.getGeomInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.Messages.Meta.prototype.setGeomInfo = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string directory = 8;
 * @return {string}
 */
proto.Messages.Meta.prototype.getDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.Messages.Meta.prototype.setDirectory = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 uid = 9;
 * @return {number}
 */
proto.Messages.Meta.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.Messages.Meta.prototype.setUid = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 parent = 10;
 * @return {number}
 */
proto.Messages.Meta.prototype.getParent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.Messages.Meta.prototype.setParent = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 created = 11;
 * @return {number}
 */
proto.Messages.Meta.prototype.getCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.Messages.Meta.prototype.setCreated = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 saved = 12;
 * @return {number}
 */
proto.Messages.Meta.prototype.getSaved = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.Messages.Meta.prototype.setSaved = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 modified = 13;
 * @return {number}
 */
proto.Messages.Meta.prototype.getModified = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.Messages.Meta.prototype.setModified = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 iteration = 14;
 * @return {number}
 */
proto.Messages.Meta.prototype.getIteration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.Messages.Meta.prototype.setIteration = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 save_interval = 15;
 * @return {number}
 */
proto.Messages.Meta.prototype.getSaveInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.Messages.Meta.prototype.setSaveInterval = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional bool enabled = 16;
 * @return {boolean}
 */
proto.Messages.Meta.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.Messages.Meta.prototype.setEnabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool locked = 17;
 * @return {boolean}
 */
proto.Messages.Meta.prototype.getLocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.Messages.Meta.prototype.setLocked = function(value) {
  jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool auto_save = 18;
 * @return {boolean}
 */
proto.Messages.Meta.prototype.getAutoSave = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.Messages.Meta.prototype.setAutoSave = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional Revision revision = 20;
 * @return {?proto.Messages.Revision}
 */
proto.Messages.Meta.prototype.getRevision = function() {
  return /** @type{?proto.Messages.Revision} */ (
    jspb.Message.getWrapperField(this, vector_pb.Revision, 20));
};


/** @param {?proto.Messages.Revision|undefined} value */
proto.Messages.Meta.prototype.setRevision = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.Messages.Meta.prototype.clearRevision = function() {
  this.setRevision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Meta.prototype.hasRevision = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Revision version = 21;
 * @return {?proto.Messages.Revision}
 */
proto.Messages.Meta.prototype.getVersion = function() {
  return /** @type{?proto.Messages.Revision} */ (
    jspb.Message.getWrapperField(this, vector_pb.Revision, 21));
};


/** @param {?proto.Messages.Revision|undefined} value */
proto.Messages.Meta.prototype.setVersion = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.Messages.Meta.prototype.clearVersion = function() {
  this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Meta.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional Extrema bounds = 22;
 * @return {?proto.Messages.Extrema}
 */
proto.Messages.Meta.prototype.getBounds = function() {
  return /** @type{?proto.Messages.Extrema} */ (
    jspb.Message.getWrapperField(this, vector_pb.Extrema, 22));
};


/** @param {?proto.Messages.Extrema|undefined} value */
proto.Messages.Meta.prototype.setBounds = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.Messages.Meta.prototype.clearBounds = function() {
  this.setBounds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Meta.prototype.hasBounds = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional GraphicsControl appearance = 24;
 * @return {?proto.Messages.GraphicsControl}
 */
proto.Messages.Meta.prototype.getAppearance = function() {
  return /** @type{?proto.Messages.GraphicsControl} */ (
    jspb.Message.getWrapperField(this, proto.Messages.GraphicsControl, 24));
};


/** @param {?proto.Messages.GraphicsControl|undefined} value */
proto.Messages.Meta.prototype.setAppearance = function(value) {
  jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.Messages.Meta.prototype.clearAppearance = function() {
  this.setAppearance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Meta.prototype.hasAppearance = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * repeated int64 children = 25;
 * @return {!Array<number>}
 */
proto.Messages.Meta.prototype.getChildrenList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 25));
};


/** @param {!Array<number>} value */
proto.Messages.Meta.prototype.setChildrenList = function(value) {
  jspb.Message.setField(this, 25, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Meta.prototype.addChildren = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 25, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Meta.prototype.clearChildrenList = function() {
  this.setChildrenList([]);
};


/**
 * repeated int32 groups = 26;
 * @return {!Array<number>}
 */
proto.Messages.Meta.prototype.getGroupsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 26));
};


/** @param {!Array<number>} value */
proto.Messages.Meta.prototype.setGroupsList = function(value) {
  jspb.Message.setField(this, 26, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Meta.prototype.addGroups = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 26, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Meta.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};


/**
 * repeated int32 loops = 27;
 * @return {!Array<number>}
 */
proto.Messages.Meta.prototype.getLoopsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 27));
};


/** @param {!Array<number>} value */
proto.Messages.Meta.prototype.setLoopsList = function(value) {
  jspb.Message.setField(this, 27, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Meta.prototype.addLoops = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 27, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Meta.prototype.clearLoopsList = function() {
  this.setLoopsList([]);
};


/**
 * repeated int32 surfaces = 28;
 * @return {!Array<number>}
 */
proto.Messages.Meta.prototype.getSurfacesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 28));
};


/** @param {!Array<number>} value */
proto.Messages.Meta.prototype.setSurfacesList = function(value) {
  jspb.Message.setField(this, 28, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Meta.prototype.addSurfaces = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 28, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Meta.prototype.clearSurfacesList = function() {
  this.setSurfacesList([]);
};


/**
 * repeated int32 volumes = 29;
 * @return {!Array<number>}
 */
proto.Messages.Meta.prototype.getVolumesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 29));
};


/** @param {!Array<number>} value */
proto.Messages.Meta.prototype.setVolumesList = function(value) {
  jspb.Message.setField(this, 29, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Meta.prototype.addVolumes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 29, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Meta.prototype.clearVolumesList = function() {
  this.setVolumesList([]);
};


/**
 * repeated double model_transform = 30;
 * @return {!Array<number>}
 */
proto.Messages.Meta.prototype.getModelTransformList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 30));
};


/** @param {!Array<number>} value */
proto.Messages.Meta.prototype.setModelTransformList = function(value) {
  jspb.Message.setField(this, 30, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.Messages.Meta.prototype.addModelTransform = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 30, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Meta.prototype.clearModelTransformList = function() {
  this.setModelTransformList([]);
};


/**
 * repeated string properties = 31;
 * @return {!Array<string>}
 */
proto.Messages.Meta.prototype.getPropertiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 31));
};


/** @param {!Array<string>} value */
proto.Messages.Meta.prototype.setPropertiesList = function(value) {
  jspb.Message.setField(this, 31, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.Messages.Meta.prototype.addProperties = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 31, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.Messages.Meta.prototype.clearPropertiesList = function() {
  this.setPropertiesList([]);
};


goog.object.extend(exports, proto.Messages);
