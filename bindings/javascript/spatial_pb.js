// source: spatial.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var vector_pb = require('./vector_pb.js');
goog.object.extend(proto, vector_pb);
goog.exportSymbol('proto.Messages.GridControl', null, global);
goog.exportSymbol('proto.Messages.MeshControl', null, global);
goog.exportSymbol('proto.Messages.NetworkControl', null, global);
goog.exportSymbol('proto.Messages.Topology', null, global);
goog.exportSymbol('proto.Messages.TreeControl', null, global);
goog.exportSymbol('proto.Messages.Zone', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.Zone = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.Zone.repeatedFields_, null);
};
goog.inherits(proto.Messages.Zone, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.Zone.displayName = 'proto.Messages.Zone';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.Topology = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.Topology.repeatedFields_, null);
};
goog.inherits(proto.Messages.Topology, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.Topology.displayName = 'proto.Messages.Topology';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.GridControl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.GridControl.repeatedFields_, null);
};
goog.inherits(proto.Messages.GridControl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.GridControl.displayName = 'proto.Messages.GridControl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.MeshControl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Messages.MeshControl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.MeshControl.displayName = 'proto.Messages.MeshControl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.TreeControl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Messages.TreeControl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.TreeControl.displayName = 'proto.Messages.TreeControl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.NetworkControl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Messages.NetworkControl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Messages.NetworkControl.displayName = 'proto.Messages.NetworkControl';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.Zone.repeatedFields_ = [11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.Zone.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.Zone.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.Zone} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.Zone.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dimensionality: jspb.Message.getFieldWithDefault(msg, 3, 0),
    numElements: jspb.Message.getFieldWithDefault(msg, 5, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 6, 0),
    comments: jspb.Message.getFieldWithDefault(msg, 7, ""),
    info: jspb.Message.getFieldWithDefault(msg, 8, ""),
    bounds: (f = msg.getBounds()) && vector_pb.Extrema.toObject(includeInstance, f),
    terminalPositionList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 11)) == null ? undefined : f,
    specificElementsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.Zone}
 */
proto.Messages.Zone.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.Zone;
  return proto.Messages.Zone.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.Zone} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.Zone}
 */
proto.Messages.Zone.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDimensionality(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumElements(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setComments(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 10:
      var value = new vector_pb.Extrema;
      reader.readMessage(value,vector_pb.Extrema.deserializeBinaryFromReader);
      msg.setBounds(value);
      break;
    case 11:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setTerminalPositionList(value);
      break;
    case 12:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setSpecificElementsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.Zone.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.Zone.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.Zone} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.Zone.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDimensionality();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getNumElements();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getComments();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBounds();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      vector_pb.Extrema.serializeBinaryToWriter
    );
  }
  f = message.getTerminalPositionList();
  if (f.length > 0) {
    writer.writePackedFloat(
      11,
      f
    );
  }
  f = message.getSpecificElementsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      12,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.Messages.Zone.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.Messages.Zone.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 dimensionality = 3;
 * @return {number}
 */
proto.Messages.Zone.prototype.getDimensionality = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.setDimensionality = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 num_elements = 5;
 * @return {number}
 */
proto.Messages.Zone.prototype.getNumElements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.setNumElements = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 offset = 6;
 * @return {number}
 */
proto.Messages.Zone.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string comments = 7;
 * @return {string}
 */
proto.Messages.Zone.prototype.getComments = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.setComments = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string info = 8;
 * @return {string}
 */
proto.Messages.Zone.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Extrema bounds = 10;
 * @return {?proto.Messages.Extrema}
 */
proto.Messages.Zone.prototype.getBounds = function() {
  return /** @type{?proto.Messages.Extrema} */ (
    jspb.Message.getWrapperField(this, vector_pb.Extrema, 10));
};


/**
 * @param {?proto.Messages.Extrema|undefined} value
 * @return {!proto.Messages.Zone} returns this
*/
proto.Messages.Zone.prototype.setBounds = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.clearBounds = function() {
  return this.setBounds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Zone.prototype.hasBounds = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated float terminal_position = 11;
 * @return {!Array<number>}
 */
proto.Messages.Zone.prototype.getTerminalPositionList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 11));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.setTerminalPositionList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.addTerminalPosition = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.clearTerminalPositionList = function() {
  return this.setTerminalPositionList([]);
};


/**
 * repeated int32 specific_elements = 12;
 * @return {!Array<number>}
 */
proto.Messages.Zone.prototype.getSpecificElementsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.setSpecificElementsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.addSpecificElements = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.Zone} returns this
 */
proto.Messages.Zone.prototype.clearSpecificElementsList = function() {
  return this.setSpecificElementsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.Topology.repeatedFields_ = [8,9,20,21,22,23,26];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.Topology.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.Topology.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.Topology} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.Topology.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ndim: jspb.Message.getFieldWithDefault(msg, 3, 0),
    basis: jspb.Message.getFieldWithDefault(msg, 4, 0),
    resolutionList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 8)) == null ? undefined : f,
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    vector_pb.Vector64.toObject, includeInstance),
    nodes: (f = msg.getNodes()) && vector_pb.Elements.toObject(includeInstance, f),
    edges: (f = msg.getEdges()) && vector_pb.Elements.toObject(includeInstance, f),
    interiorEdges: (f = msg.getInteriorEdges()) && vector_pb.Elements.toObject(includeInstance, f),
    faces: (f = msg.getFaces()) && vector_pb.Elements.toObject(includeInstance, f),
    interiorFaces: (f = msg.getInteriorFaces()) && vector_pb.Elements.toObject(includeInstance, f),
    cells: (f = msg.getCells()) && vector_pb.Elements.toObject(includeInstance, f),
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.Messages.Zone.toObject, includeInstance),
    loopsList: jspb.Message.toObjectList(msg.getLoopsList(),
    proto.Messages.Zone.toObject, includeInstance),
    surfacesList: jspb.Message.toObjectList(msg.getSurfacesList(),
    proto.Messages.Zone.toObject, includeInstance),
    volumesList: jspb.Message.toObjectList(msg.getVolumesList(),
    proto.Messages.Zone.toObject, includeInstance),
    locationsList: (f = jspb.Message.getRepeatedField(msg, 26)) == null ? undefined : f,
    filename: jspb.Message.getFieldWithDefault(msg, 30, ""),
    revision: (f = msg.getRevision()) && vector_pb.Revision.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.Topology}
 */
proto.Messages.Topology.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.Topology;
  return proto.Messages.Topology.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.Topology} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.Topology}
 */
proto.Messages.Topology.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNdim(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBasis(value);
      break;
    case 8:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setResolutionList(value);
      break;
    case 9:
      var value = new vector_pb.Vector64;
      reader.readMessage(value,vector_pb.Vector64.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 10:
      var value = new vector_pb.Elements;
      reader.readMessage(value,vector_pb.Elements.deserializeBinaryFromReader);
      msg.setNodes(value);
      break;
    case 11:
      var value = new vector_pb.Elements;
      reader.readMessage(value,vector_pb.Elements.deserializeBinaryFromReader);
      msg.setEdges(value);
      break;
    case 12:
      var value = new vector_pb.Elements;
      reader.readMessage(value,vector_pb.Elements.deserializeBinaryFromReader);
      msg.setInteriorEdges(value);
      break;
    case 13:
      var value = new vector_pb.Elements;
      reader.readMessage(value,vector_pb.Elements.deserializeBinaryFromReader);
      msg.setFaces(value);
      break;
    case 14:
      var value = new vector_pb.Elements;
      reader.readMessage(value,vector_pb.Elements.deserializeBinaryFromReader);
      msg.setInteriorFaces(value);
      break;
    case 15:
      var value = new vector_pb.Elements;
      reader.readMessage(value,vector_pb.Elements.deserializeBinaryFromReader);
      msg.setCells(value);
      break;
    case 20:
      var value = new proto.Messages.Zone;
      reader.readMessage(value,proto.Messages.Zone.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    case 21:
      var value = new proto.Messages.Zone;
      reader.readMessage(value,proto.Messages.Zone.deserializeBinaryFromReader);
      msg.addLoops(value);
      break;
    case 22:
      var value = new proto.Messages.Zone;
      reader.readMessage(value,proto.Messages.Zone.deserializeBinaryFromReader);
      msg.addSurfaces(value);
      break;
    case 23:
      var value = new proto.Messages.Zone;
      reader.readMessage(value,proto.Messages.Zone.deserializeBinaryFromReader);
      msg.addVolumes(value);
      break;
    case 26:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setLocationsList(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 31:
      var value = new vector_pb.Revision;
      reader.readMessage(value,vector_pb.Revision.deserializeBinaryFromReader);
      msg.setRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.Topology.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.Topology.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.Topology} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.Topology.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNdim();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBasis();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getResolutionList();
  if (f.length > 0) {
    writer.writePackedDouble(
      8,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      vector_pb.Vector64.serializeBinaryToWriter
    );
  }
  f = message.getNodes();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      vector_pb.Elements.serializeBinaryToWriter
    );
  }
  f = message.getEdges();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      vector_pb.Elements.serializeBinaryToWriter
    );
  }
  f = message.getInteriorEdges();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      vector_pb.Elements.serializeBinaryToWriter
    );
  }
  f = message.getFaces();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      vector_pb.Elements.serializeBinaryToWriter
    );
  }
  f = message.getInteriorFaces();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      vector_pb.Elements.serializeBinaryToWriter
    );
  }
  f = message.getCells();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      vector_pb.Elements.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.Messages.Zone.serializeBinaryToWriter
    );
  }
  f = message.getLoopsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.Messages.Zone.serializeBinaryToWriter
    );
  }
  f = message.getSurfacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.Messages.Zone.serializeBinaryToWriter
    );
  }
  f = message.getVolumesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      23,
      f,
      proto.Messages.Zone.serializeBinaryToWriter
    );
  }
  f = message.getLocationsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      26,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getRevision();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      vector_pb.Revision.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.Messages.Topology.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 type = 2;
 * @return {number}
 */
proto.Messages.Topology.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 ndim = 3;
 * @return {number}
 */
proto.Messages.Topology.prototype.getNdim = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.setNdim = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 basis = 4;
 * @return {number}
 */
proto.Messages.Topology.prototype.getBasis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.setBasis = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated double resolution = 8;
 * @return {!Array<number>}
 */
proto.Messages.Topology.prototype.getResolutionList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.setResolutionList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.addResolution = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearResolutionList = function() {
  return this.setResolutionList([]);
};


/**
 * repeated Vector64 data = 9;
 * @return {!Array<!proto.Messages.Vector64>}
 */
proto.Messages.Topology.prototype.getDataList = function() {
  return /** @type{!Array<!proto.Messages.Vector64>} */ (
    jspb.Message.getRepeatedWrapperField(this, vector_pb.Vector64, 9));
};


/**
 * @param {!Array<!proto.Messages.Vector64>} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.Messages.Vector64=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Messages.Vector64}
 */
proto.Messages.Topology.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.Messages.Vector64, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional Elements nodes = 10;
 * @return {?proto.Messages.Elements}
 */
proto.Messages.Topology.prototype.getNodes = function() {
  return /** @type{?proto.Messages.Elements} */ (
    jspb.Message.getWrapperField(this, vector_pb.Elements, 10));
};


/**
 * @param {?proto.Messages.Elements|undefined} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setNodes = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearNodes = function() {
  return this.setNodes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Topology.prototype.hasNodes = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Elements edges = 11;
 * @return {?proto.Messages.Elements}
 */
proto.Messages.Topology.prototype.getEdges = function() {
  return /** @type{?proto.Messages.Elements} */ (
    jspb.Message.getWrapperField(this, vector_pb.Elements, 11));
};


/**
 * @param {?proto.Messages.Elements|undefined} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setEdges = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearEdges = function() {
  return this.setEdges(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Topology.prototype.hasEdges = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Elements interior_edges = 12;
 * @return {?proto.Messages.Elements}
 */
proto.Messages.Topology.prototype.getInteriorEdges = function() {
  return /** @type{?proto.Messages.Elements} */ (
    jspb.Message.getWrapperField(this, vector_pb.Elements, 12));
};


/**
 * @param {?proto.Messages.Elements|undefined} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setInteriorEdges = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearInteriorEdges = function() {
  return this.setInteriorEdges(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Topology.prototype.hasInteriorEdges = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Elements faces = 13;
 * @return {?proto.Messages.Elements}
 */
proto.Messages.Topology.prototype.getFaces = function() {
  return /** @type{?proto.Messages.Elements} */ (
    jspb.Message.getWrapperField(this, vector_pb.Elements, 13));
};


/**
 * @param {?proto.Messages.Elements|undefined} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setFaces = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearFaces = function() {
  return this.setFaces(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Topology.prototype.hasFaces = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Elements interior_faces = 14;
 * @return {?proto.Messages.Elements}
 */
proto.Messages.Topology.prototype.getInteriorFaces = function() {
  return /** @type{?proto.Messages.Elements} */ (
    jspb.Message.getWrapperField(this, vector_pb.Elements, 14));
};


/**
 * @param {?proto.Messages.Elements|undefined} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setInteriorFaces = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearInteriorFaces = function() {
  return this.setInteriorFaces(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Topology.prototype.hasInteriorFaces = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Elements cells = 15;
 * @return {?proto.Messages.Elements}
 */
proto.Messages.Topology.prototype.getCells = function() {
  return /** @type{?proto.Messages.Elements} */ (
    jspb.Message.getWrapperField(this, vector_pb.Elements, 15));
};


/**
 * @param {?proto.Messages.Elements|undefined} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setCells = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearCells = function() {
  return this.setCells(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Topology.prototype.hasCells = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated Zone groups = 20;
 * @return {!Array<!proto.Messages.Zone>}
 */
proto.Messages.Topology.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.Messages.Zone>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Messages.Zone, 20));
};


/**
 * @param {!Array<!proto.Messages.Zone>} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.Messages.Zone=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Messages.Zone}
 */
proto.Messages.Topology.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.Messages.Zone, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};


/**
 * repeated Zone loops = 21;
 * @return {!Array<!proto.Messages.Zone>}
 */
proto.Messages.Topology.prototype.getLoopsList = function() {
  return /** @type{!Array<!proto.Messages.Zone>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Messages.Zone, 21));
};


/**
 * @param {!Array<!proto.Messages.Zone>} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setLoopsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.Messages.Zone=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Messages.Zone}
 */
proto.Messages.Topology.prototype.addLoops = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.Messages.Zone, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearLoopsList = function() {
  return this.setLoopsList([]);
};


/**
 * repeated Zone surfaces = 22;
 * @return {!Array<!proto.Messages.Zone>}
 */
proto.Messages.Topology.prototype.getSurfacesList = function() {
  return /** @type{!Array<!proto.Messages.Zone>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Messages.Zone, 22));
};


/**
 * @param {!Array<!proto.Messages.Zone>} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setSurfacesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.Messages.Zone=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Messages.Zone}
 */
proto.Messages.Topology.prototype.addSurfaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.Messages.Zone, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearSurfacesList = function() {
  return this.setSurfacesList([]);
};


/**
 * repeated Zone volumes = 23;
 * @return {!Array<!proto.Messages.Zone>}
 */
proto.Messages.Topology.prototype.getVolumesList = function() {
  return /** @type{!Array<!proto.Messages.Zone>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Messages.Zone, 23));
};


/**
 * @param {!Array<!proto.Messages.Zone>} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setVolumesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 23, value);
};


/**
 * @param {!proto.Messages.Zone=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Messages.Zone}
 */
proto.Messages.Topology.prototype.addVolumes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 23, opt_value, proto.Messages.Zone, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearVolumesList = function() {
  return this.setVolumesList([]);
};


/**
 * repeated int32 locations = 26;
 * @return {!Array<number>}
 */
proto.Messages.Topology.prototype.getLocationsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 26));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.setLocationsList = function(value) {
  return jspb.Message.setField(this, 26, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.addLocations = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 26, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearLocationsList = function() {
  return this.setLocationsList([]);
};


/**
 * optional string filename = 30;
 * @return {string}
 */
proto.Messages.Topology.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional Revision revision = 31;
 * @return {?proto.Messages.Revision}
 */
proto.Messages.Topology.prototype.getRevision = function() {
  return /** @type{?proto.Messages.Revision} */ (
    jspb.Message.getWrapperField(this, vector_pb.Revision, 31));
};


/**
 * @param {?proto.Messages.Revision|undefined} value
 * @return {!proto.Messages.Topology} returns this
*/
proto.Messages.Topology.prototype.setRevision = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Messages.Topology} returns this
 */
proto.Messages.Topology.prototype.clearRevision = function() {
  return this.setRevision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.Topology.prototype.hasRevision = function() {
  return jspb.Message.getField(this, 31) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.GridControl.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.GridControl.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.GridControl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.GridControl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.GridControl.toObject = function(includeInstance, msg) {
  var f, obj = {
    basis: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sizeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    spacingList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    gradingList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 4)) == null ? undefined : f,
    bounds: (f = msg.getBounds()) && vector_pb.Extrema.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.GridControl}
 */
proto.Messages.GridControl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.GridControl;
  return proto.Messages.GridControl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.GridControl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.GridControl}
 */
proto.Messages.GridControl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBasis(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setSizeList(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setSpacingList(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setGradingList(value);
      break;
    case 10:
      var value = new vector_pb.Extrema;
      reader.readMessage(value,vector_pb.Extrema.deserializeBinaryFromReader);
      msg.setBounds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.GridControl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.GridControl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.GridControl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.GridControl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasis();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSizeList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = message.getSpacingList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
  f = message.getGradingList();
  if (f.length > 0) {
    writer.writePackedDouble(
      4,
      f
    );
  }
  f = message.getBounds();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      vector_pb.Extrema.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 basis = 1;
 * @return {number}
 */
proto.Messages.GridControl.prototype.getBasis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.GridControl} returns this
 */
proto.Messages.GridControl.prototype.setBasis = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated int32 size = 2;
 * @return {!Array<number>}
 */
proto.Messages.GridControl.prototype.getSizeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Messages.GridControl} returns this
 */
proto.Messages.GridControl.prototype.setSizeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Messages.GridControl} returns this
 */
proto.Messages.GridControl.prototype.addSize = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.GridControl} returns this
 */
proto.Messages.GridControl.prototype.clearSizeList = function() {
  return this.setSizeList([]);
};


/**
 * repeated double spacing = 3;
 * @return {!Array<number>}
 */
proto.Messages.GridControl.prototype.getSpacingList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Messages.GridControl} returns this
 */
proto.Messages.GridControl.prototype.setSpacingList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Messages.GridControl} returns this
 */
proto.Messages.GridControl.prototype.addSpacing = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.GridControl} returns this
 */
proto.Messages.GridControl.prototype.clearSpacingList = function() {
  return this.setSpacingList([]);
};


/**
 * repeated double grading = 4;
 * @return {!Array<number>}
 */
proto.Messages.GridControl.prototype.getGradingList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.Messages.GridControl} returns this
 */
proto.Messages.GridControl.prototype.setGradingList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.Messages.GridControl} returns this
 */
proto.Messages.GridControl.prototype.addGrading = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Messages.GridControl} returns this
 */
proto.Messages.GridControl.prototype.clearGradingList = function() {
  return this.setGradingList([]);
};


/**
 * optional Extrema bounds = 10;
 * @return {?proto.Messages.Extrema}
 */
proto.Messages.GridControl.prototype.getBounds = function() {
  return /** @type{?proto.Messages.Extrema} */ (
    jspb.Message.getWrapperField(this, vector_pb.Extrema, 10));
};


/**
 * @param {?proto.Messages.Extrema|undefined} value
 * @return {!proto.Messages.GridControl} returns this
*/
proto.Messages.GridControl.prototype.setBounds = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Messages.GridControl} returns this
 */
proto.Messages.GridControl.prototype.clearBounds = function() {
  return this.setBounds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.GridControl.prototype.hasBounds = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.MeshControl.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.MeshControl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.MeshControl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MeshControl.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetN: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxIterations: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sizeRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    sizeDecay: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    sizeExponent: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    curvRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    curvDecay: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    curvExponent: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    nodeRadius: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    bounds: (f = msg.getBounds()) && vector_pb.Extrema.toObject(includeInstance, f),
    interior: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    exterior: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    shell: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    equalize: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    smooth: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    includeBackground: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    keepExistingPoints: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    xSymmetry: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    ySymmetry: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    zSymmetry: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    backgroundN: jspb.Message.getFieldWithDefault(msg, 30, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.MeshControl}
 */
proto.Messages.MeshControl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.MeshControl;
  return proto.Messages.MeshControl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.MeshControl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.MeshControl}
 */
proto.Messages.MeshControl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTargetN(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxIterations(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSizeRatio(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSizeDecay(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSizeExponent(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurvRatio(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurvDecay(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurvExponent(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNodeRadius(value);
      break;
    case 10:
      var value = new vector_pb.Extrema;
      reader.readMessage(value,vector_pb.Extrema.deserializeBinaryFromReader);
      msg.setBounds(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInterior(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExterior(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShell(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEqualize(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSmooth(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeBackground(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setKeepExistingPoints(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setXSymmetry(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setYSymmetry(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setZSymmetry(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBackgroundN(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.MeshControl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.MeshControl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.MeshControl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MeshControl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetN();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMaxIterations();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSizeRatio();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getSizeDecay();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getSizeExponent();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getCurvRatio();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getCurvDecay();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getCurvExponent();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getNodeRadius();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getBounds();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      vector_pb.Extrema.serializeBinaryToWriter
    );
  }
  f = message.getInterior();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getExterior();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getShell();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getEqualize();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getSmooth();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getIncludeBackground();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getKeepExistingPoints();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getXSymmetry();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getYSymmetry();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getZSymmetry();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getBackgroundN();
  if (f !== 0) {
    writer.writeInt64(
      30,
      f
    );
  }
};


/**
 * optional int64 target_n = 1;
 * @return {number}
 */
proto.Messages.MeshControl.prototype.getTargetN = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setTargetN = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 max_iterations = 2;
 * @return {number}
 */
proto.Messages.MeshControl.prototype.getMaxIterations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setMaxIterations = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double size_ratio = 3;
 * @return {number}
 */
proto.Messages.MeshControl.prototype.getSizeRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setSizeRatio = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double size_decay = 4;
 * @return {number}
 */
proto.Messages.MeshControl.prototype.getSizeDecay = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setSizeDecay = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double size_exponent = 5;
 * @return {number}
 */
proto.Messages.MeshControl.prototype.getSizeExponent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setSizeExponent = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double curv_ratio = 6;
 * @return {number}
 */
proto.Messages.MeshControl.prototype.getCurvRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setCurvRatio = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double curv_decay = 7;
 * @return {number}
 */
proto.Messages.MeshControl.prototype.getCurvDecay = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setCurvDecay = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double curv_exponent = 8;
 * @return {number}
 */
proto.Messages.MeshControl.prototype.getCurvExponent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setCurvExponent = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double node_radius = 9;
 * @return {number}
 */
proto.Messages.MeshControl.prototype.getNodeRadius = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setNodeRadius = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional Extrema bounds = 10;
 * @return {?proto.Messages.Extrema}
 */
proto.Messages.MeshControl.prototype.getBounds = function() {
  return /** @type{?proto.Messages.Extrema} */ (
    jspb.Message.getWrapperField(this, vector_pb.Extrema, 10));
};


/**
 * @param {?proto.Messages.Extrema|undefined} value
 * @return {!proto.Messages.MeshControl} returns this
*/
proto.Messages.MeshControl.prototype.setBounds = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.clearBounds = function() {
  return this.setBounds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.MeshControl.prototype.hasBounds = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool interior = 12;
 * @return {boolean}
 */
proto.Messages.MeshControl.prototype.getInterior = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setInterior = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool exterior = 13;
 * @return {boolean}
 */
proto.Messages.MeshControl.prototype.getExterior = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setExterior = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool shell = 14;
 * @return {boolean}
 */
proto.Messages.MeshControl.prototype.getShell = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setShell = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool equalize = 15;
 * @return {boolean}
 */
proto.Messages.MeshControl.prototype.getEqualize = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setEqualize = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool smooth = 16;
 * @return {boolean}
 */
proto.Messages.MeshControl.prototype.getSmooth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setSmooth = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool include_background = 18;
 * @return {boolean}
 */
proto.Messages.MeshControl.prototype.getIncludeBackground = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setIncludeBackground = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool keep_existing_points = 19;
 * @return {boolean}
 */
proto.Messages.MeshControl.prototype.getKeepExistingPoints = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setKeepExistingPoints = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool x_symmetry = 24;
 * @return {boolean}
 */
proto.Messages.MeshControl.prototype.getXSymmetry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setXSymmetry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional bool y_symmetry = 25;
 * @return {boolean}
 */
proto.Messages.MeshControl.prototype.getYSymmetry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setYSymmetry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional bool z_symmetry = 26;
 * @return {boolean}
 */
proto.Messages.MeshControl.prototype.getZSymmetry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setZSymmetry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional int64 background_n = 30;
 * @return {number}
 */
proto.Messages.MeshControl.prototype.getBackgroundN = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.MeshControl} returns this
 */
proto.Messages.MeshControl.prototype.setBackgroundN = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.TreeControl.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.TreeControl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.TreeControl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.TreeControl.toObject = function(includeInstance, msg) {
  var f, obj = {
    minDepth: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxDepth: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bounds: (f = msg.getBounds()) && vector_pb.Extrema.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.TreeControl}
 */
proto.Messages.TreeControl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.TreeControl;
  return proto.Messages.TreeControl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.TreeControl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.TreeControl}
 */
proto.Messages.TreeControl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinDepth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxDepth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxSize(value);
      break;
    case 10:
      var value = new vector_pb.Extrema;
      reader.readMessage(value,vector_pb.Extrema.deserializeBinaryFromReader);
      msg.setBounds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.TreeControl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.TreeControl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.TreeControl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.TreeControl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinDepth();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMaxDepth();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMaxSize();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getBounds();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      vector_pb.Extrema.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 min_depth = 1;
 * @return {number}
 */
proto.Messages.TreeControl.prototype.getMinDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.TreeControl} returns this
 */
proto.Messages.TreeControl.prototype.setMinDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 max_depth = 2;
 * @return {number}
 */
proto.Messages.TreeControl.prototype.getMaxDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.TreeControl} returns this
 */
proto.Messages.TreeControl.prototype.setMaxDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 max_size = 3;
 * @return {number}
 */
proto.Messages.TreeControl.prototype.getMaxSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Messages.TreeControl} returns this
 */
proto.Messages.TreeControl.prototype.setMaxSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Extrema bounds = 10;
 * @return {?proto.Messages.Extrema}
 */
proto.Messages.TreeControl.prototype.getBounds = function() {
  return /** @type{?proto.Messages.Extrema} */ (
    jspb.Message.getWrapperField(this, vector_pb.Extrema, 10));
};


/**
 * @param {?proto.Messages.Extrema|undefined} value
 * @return {!proto.Messages.TreeControl} returns this
*/
proto.Messages.TreeControl.prototype.setBounds = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Messages.TreeControl} returns this
 */
proto.Messages.TreeControl.prototype.clearBounds = function() {
  return this.setBounds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Messages.TreeControl.prototype.hasBounds = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.NetworkControl.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.NetworkControl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.NetworkControl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.NetworkControl.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.NetworkControl}
 */
proto.Messages.NetworkControl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.NetworkControl;
  return proto.Messages.NetworkControl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.NetworkControl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.NetworkControl}
 */
proto.Messages.NetworkControl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.NetworkControl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.NetworkControl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.NetworkControl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.NetworkControl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.Messages);
