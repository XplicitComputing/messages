// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vector.proto

package Messages;

public final class Vector {
  private Vector() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RevisionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Messages.Revision)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 major_rev = 1;</code>
     * @return The majorRev.
     */
    long getMajorRev();

    /**
     * <code>int64 minor_rev = 2;</code>
     * @return The minorRev.
     */
    long getMinorRev();
  }
  /**
   * Protobuf type {@code Messages.Revision}
   */
  public static final class Revision extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Messages.Revision)
      RevisionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Revision.newBuilder() to construct.
    private Revision(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Revision() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Revision();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Revision(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              majorRev_ = input.readInt64();
              break;
            }
            case 16: {

              minorRev_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Messages.Vector.internal_static_Messages_Revision_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Messages.Vector.internal_static_Messages_Revision_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Messages.Vector.Revision.class, Messages.Vector.Revision.Builder.class);
    }

    public static final int MAJOR_REV_FIELD_NUMBER = 1;
    private long majorRev_;
    /**
     * <code>int64 major_rev = 1;</code>
     * @return The majorRev.
     */
    @java.lang.Override
    public long getMajorRev() {
      return majorRev_;
    }

    public static final int MINOR_REV_FIELD_NUMBER = 2;
    private long minorRev_;
    /**
     * <code>int64 minor_rev = 2;</code>
     * @return The minorRev.
     */
    @java.lang.Override
    public long getMinorRev() {
      return minorRev_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (majorRev_ != 0L) {
        output.writeInt64(1, majorRev_);
      }
      if (minorRev_ != 0L) {
        output.writeInt64(2, minorRev_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (majorRev_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, majorRev_);
      }
      if (minorRev_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, minorRev_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Messages.Vector.Revision)) {
        return super.equals(obj);
      }
      Messages.Vector.Revision other = (Messages.Vector.Revision) obj;

      if (getMajorRev()
          != other.getMajorRev()) return false;
      if (getMinorRev()
          != other.getMinorRev()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MAJOR_REV_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMajorRev());
      hash = (37 * hash) + MINOR_REV_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMinorRev());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Messages.Vector.Revision parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Revision parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Revision parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Revision parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Revision parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Revision parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Revision parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Revision parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Revision parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Messages.Vector.Revision parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Revision parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Revision parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Messages.Vector.Revision prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Messages.Revision}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Messages.Revision)
        Messages.Vector.RevisionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Messages.Vector.internal_static_Messages_Revision_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Messages.Vector.internal_static_Messages_Revision_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Messages.Vector.Revision.class, Messages.Vector.Revision.Builder.class);
      }

      // Construct using Messages.Vector.Revision.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        majorRev_ = 0L;

        minorRev_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Messages.Vector.internal_static_Messages_Revision_descriptor;
      }

      @java.lang.Override
      public Messages.Vector.Revision getDefaultInstanceForType() {
        return Messages.Vector.Revision.getDefaultInstance();
      }

      @java.lang.Override
      public Messages.Vector.Revision build() {
        Messages.Vector.Revision result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Messages.Vector.Revision buildPartial() {
        Messages.Vector.Revision result = new Messages.Vector.Revision(this);
        result.majorRev_ = majorRev_;
        result.minorRev_ = minorRev_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Messages.Vector.Revision) {
          return mergeFrom((Messages.Vector.Revision)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Messages.Vector.Revision other) {
        if (other == Messages.Vector.Revision.getDefaultInstance()) return this;
        if (other.getMajorRev() != 0L) {
          setMajorRev(other.getMajorRev());
        }
        if (other.getMinorRev() != 0L) {
          setMinorRev(other.getMinorRev());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Messages.Vector.Revision parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Messages.Vector.Revision) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long majorRev_ ;
      /**
       * <code>int64 major_rev = 1;</code>
       * @return The majorRev.
       */
      @java.lang.Override
      public long getMajorRev() {
        return majorRev_;
      }
      /**
       * <code>int64 major_rev = 1;</code>
       * @param value The majorRev to set.
       * @return This builder for chaining.
       */
      public Builder setMajorRev(long value) {
        
        majorRev_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 major_rev = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMajorRev() {
        
        majorRev_ = 0L;
        onChanged();
        return this;
      }

      private long minorRev_ ;
      /**
       * <code>int64 minor_rev = 2;</code>
       * @return The minorRev.
       */
      @java.lang.Override
      public long getMinorRev() {
        return minorRev_;
      }
      /**
       * <code>int64 minor_rev = 2;</code>
       * @param value The minorRev to set.
       * @return This builder for chaining.
       */
      public Builder setMinorRev(long value) {
        
        minorRev_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 minor_rev = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinorRev() {
        
        minorRev_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Messages.Revision)
    }

    // @@protoc_insertion_point(class_scope:Messages.Revision)
    private static final Messages.Vector.Revision DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Messages.Vector.Revision();
    }

    public static Messages.Vector.Revision getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Revision>
        PARSER = new com.google.protobuf.AbstractParser<Revision>() {
      @java.lang.Override
      public Revision parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Revision(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Revision> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Revision> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Messages.Vector.Revision getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExtremaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Messages.Extrema)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 dims = 1;</code>
     * @return The dims.
     */
    int getDims();

    /**
     * <code>repeated double min = 2 [packed = true];</code>
     * @return A list containing the min.
     */
    java.util.List<java.lang.Double> getMinList();
    /**
     * <code>repeated double min = 2 [packed = true];</code>
     * @return The count of min.
     */
    int getMinCount();
    /**
     * <code>repeated double min = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The min at the given index.
     */
    double getMin(int index);

    /**
     * <code>repeated double max = 3 [packed = true];</code>
     * @return A list containing the max.
     */
    java.util.List<java.lang.Double> getMaxList();
    /**
     * <code>repeated double max = 3 [packed = true];</code>
     * @return The count of max.
     */
    int getMaxCount();
    /**
     * <code>repeated double max = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The max at the given index.
     */
    double getMax(int index);

    /**
     * <code>bool is_set = 4;</code>
     * @return The isSet.
     */
    boolean getIsSet();
  }
  /**
   * Protobuf type {@code Messages.Extrema}
   */
  public static final class Extrema extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Messages.Extrema)
      ExtremaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Extrema.newBuilder() to construct.
    private Extrema(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Extrema() {
      min_ = emptyDoubleList();
      max_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Extrema();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Extrema(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              dims_ = input.readInt32();
              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                min_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              min_.addDouble(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                min_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                min_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                max_ = newDoubleList();
                mutable_bitField0_ |= 0x00000002;
              }
              max_.addDouble(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                max_ = newDoubleList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                max_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {

              isSet_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          min_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          max_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Messages.Vector.internal_static_Messages_Extrema_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Messages.Vector.internal_static_Messages_Extrema_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Messages.Vector.Extrema.class, Messages.Vector.Extrema.Builder.class);
    }

    public static final int DIMS_FIELD_NUMBER = 1;
    private int dims_;
    /**
     * <code>int32 dims = 1;</code>
     * @return The dims.
     */
    @java.lang.Override
    public int getDims() {
      return dims_;
    }

    public static final int MIN_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.DoubleList min_;
    /**
     * <code>repeated double min = 2 [packed = true];</code>
     * @return A list containing the min.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getMinList() {
      return min_;
    }
    /**
     * <code>repeated double min = 2 [packed = true];</code>
     * @return The count of min.
     */
    public int getMinCount() {
      return min_.size();
    }
    /**
     * <code>repeated double min = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The min at the given index.
     */
    public double getMin(int index) {
      return min_.getDouble(index);
    }
    private int minMemoizedSerializedSize = -1;

    public static final int MAX_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.DoubleList max_;
    /**
     * <code>repeated double max = 3 [packed = true];</code>
     * @return A list containing the max.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getMaxList() {
      return max_;
    }
    /**
     * <code>repeated double max = 3 [packed = true];</code>
     * @return The count of max.
     */
    public int getMaxCount() {
      return max_.size();
    }
    /**
     * <code>repeated double max = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The max at the given index.
     */
    public double getMax(int index) {
      return max_.getDouble(index);
    }
    private int maxMemoizedSerializedSize = -1;

    public static final int IS_SET_FIELD_NUMBER = 4;
    private boolean isSet_;
    /**
     * <code>bool is_set = 4;</code>
     * @return The isSet.
     */
    @java.lang.Override
    public boolean getIsSet() {
      return isSet_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (dims_ != 0) {
        output.writeInt32(1, dims_);
      }
      if (getMinList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(minMemoizedSerializedSize);
      }
      for (int i = 0; i < min_.size(); i++) {
        output.writeDoubleNoTag(min_.getDouble(i));
      }
      if (getMaxList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(maxMemoizedSerializedSize);
      }
      for (int i = 0; i < max_.size(); i++) {
        output.writeDoubleNoTag(max_.getDouble(i));
      }
      if (isSet_ != false) {
        output.writeBool(4, isSet_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dims_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, dims_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getMinList().size();
        size += dataSize;
        if (!getMinList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        minMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getMaxList().size();
        size += dataSize;
        if (!getMaxList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        maxMemoizedSerializedSize = dataSize;
      }
      if (isSet_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isSet_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Messages.Vector.Extrema)) {
        return super.equals(obj);
      }
      Messages.Vector.Extrema other = (Messages.Vector.Extrema) obj;

      if (getDims()
          != other.getDims()) return false;
      if (!getMinList()
          .equals(other.getMinList())) return false;
      if (!getMaxList()
          .equals(other.getMaxList())) return false;
      if (getIsSet()
          != other.getIsSet()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DIMS_FIELD_NUMBER;
      hash = (53 * hash) + getDims();
      if (getMinCount() > 0) {
        hash = (37 * hash) + MIN_FIELD_NUMBER;
        hash = (53 * hash) + getMinList().hashCode();
      }
      if (getMaxCount() > 0) {
        hash = (37 * hash) + MAX_FIELD_NUMBER;
        hash = (53 * hash) + getMaxList().hashCode();
      }
      hash = (37 * hash) + IS_SET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsSet());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Messages.Vector.Extrema parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Extrema parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Extrema parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Extrema parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Extrema parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Extrema parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Extrema parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Extrema parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Extrema parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Messages.Vector.Extrema parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Extrema parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Extrema parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Messages.Vector.Extrema prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Messages.Extrema}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Messages.Extrema)
        Messages.Vector.ExtremaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Messages.Vector.internal_static_Messages_Extrema_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Messages.Vector.internal_static_Messages_Extrema_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Messages.Vector.Extrema.class, Messages.Vector.Extrema.Builder.class);
      }

      // Construct using Messages.Vector.Extrema.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dims_ = 0;

        min_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        max_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000002);
        isSet_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Messages.Vector.internal_static_Messages_Extrema_descriptor;
      }

      @java.lang.Override
      public Messages.Vector.Extrema getDefaultInstanceForType() {
        return Messages.Vector.Extrema.getDefaultInstance();
      }

      @java.lang.Override
      public Messages.Vector.Extrema build() {
        Messages.Vector.Extrema result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Messages.Vector.Extrema buildPartial() {
        Messages.Vector.Extrema result = new Messages.Vector.Extrema(this);
        int from_bitField0_ = bitField0_;
        result.dims_ = dims_;
        if (((bitField0_ & 0x00000001) != 0)) {
          min_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.min_ = min_;
        if (((bitField0_ & 0x00000002) != 0)) {
          max_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.max_ = max_;
        result.isSet_ = isSet_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Messages.Vector.Extrema) {
          return mergeFrom((Messages.Vector.Extrema)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Messages.Vector.Extrema other) {
        if (other == Messages.Vector.Extrema.getDefaultInstance()) return this;
        if (other.getDims() != 0) {
          setDims(other.getDims());
        }
        if (!other.min_.isEmpty()) {
          if (min_.isEmpty()) {
            min_ = other.min_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMinIsMutable();
            min_.addAll(other.min_);
          }
          onChanged();
        }
        if (!other.max_.isEmpty()) {
          if (max_.isEmpty()) {
            max_ = other.max_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMaxIsMutable();
            max_.addAll(other.max_);
          }
          onChanged();
        }
        if (other.getIsSet() != false) {
          setIsSet(other.getIsSet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Messages.Vector.Extrema parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Messages.Vector.Extrema) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int dims_ ;
      /**
       * <code>int32 dims = 1;</code>
       * @return The dims.
       */
      @java.lang.Override
      public int getDims() {
        return dims_;
      }
      /**
       * <code>int32 dims = 1;</code>
       * @param value The dims to set.
       * @return This builder for chaining.
       */
      public Builder setDims(int value) {
        
        dims_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 dims = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDims() {
        
        dims_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList min_ = emptyDoubleList();
      private void ensureMinIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          min_ = mutableCopy(min_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double min = 2 [packed = true];</code>
       * @return A list containing the min.
       */
      public java.util.List<java.lang.Double>
          getMinList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(min_) : min_;
      }
      /**
       * <code>repeated double min = 2 [packed = true];</code>
       * @return The count of min.
       */
      public int getMinCount() {
        return min_.size();
      }
      /**
       * <code>repeated double min = 2 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The min at the given index.
       */
      public double getMin(int index) {
        return min_.getDouble(index);
      }
      /**
       * <code>repeated double min = 2 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The min to set.
       * @return This builder for chaining.
       */
      public Builder setMin(
          int index, double value) {
        ensureMinIsMutable();
        min_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double min = 2 [packed = true];</code>
       * @param value The min to add.
       * @return This builder for chaining.
       */
      public Builder addMin(double value) {
        ensureMinIsMutable();
        min_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double min = 2 [packed = true];</code>
       * @param values The min to add.
       * @return This builder for chaining.
       */
      public Builder addAllMin(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureMinIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, min_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double min = 2 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearMin() {
        min_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList max_ = emptyDoubleList();
      private void ensureMaxIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          max_ = mutableCopy(max_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated double max = 3 [packed = true];</code>
       * @return A list containing the max.
       */
      public java.util.List<java.lang.Double>
          getMaxList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(max_) : max_;
      }
      /**
       * <code>repeated double max = 3 [packed = true];</code>
       * @return The count of max.
       */
      public int getMaxCount() {
        return max_.size();
      }
      /**
       * <code>repeated double max = 3 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The max at the given index.
       */
      public double getMax(int index) {
        return max_.getDouble(index);
      }
      /**
       * <code>repeated double max = 3 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The max to set.
       * @return This builder for chaining.
       */
      public Builder setMax(
          int index, double value) {
        ensureMaxIsMutable();
        max_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double max = 3 [packed = true];</code>
       * @param value The max to add.
       * @return This builder for chaining.
       */
      public Builder addMax(double value) {
        ensureMaxIsMutable();
        max_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double max = 3 [packed = true];</code>
       * @param values The max to add.
       * @return This builder for chaining.
       */
      public Builder addAllMax(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureMaxIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, max_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double max = 3 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearMax() {
        max_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private boolean isSet_ ;
      /**
       * <code>bool is_set = 4;</code>
       * @return The isSet.
       */
      @java.lang.Override
      public boolean getIsSet() {
        return isSet_;
      }
      /**
       * <code>bool is_set = 4;</code>
       * @param value The isSet to set.
       * @return This builder for chaining.
       */
      public Builder setIsSet(boolean value) {
        
        isSet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_set = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSet() {
        
        isSet_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Messages.Extrema)
    }

    // @@protoc_insertion_point(class_scope:Messages.Extrema)
    private static final Messages.Vector.Extrema DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Messages.Vector.Extrema();
    }

    public static Messages.Vector.Extrema getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Extrema>
        PARSER = new com.google.protobuf.AbstractParser<Extrema>() {
      @java.lang.Override
      public Extrema parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Extrema(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Extrema> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Extrema> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Messages.Vector.Extrema getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Vector32OrBuilder extends
      // @@protoc_insertion_point(interface_extends:Messages.Vector32)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 components = 2;</code>
     * @return The components.
     */
    int getComponents();

    /**
     * <code>bool interleaved = 3;</code>
     * @return The interleaved.
     */
    boolean getInterleaved();

    /**
     * <code>.Messages.Revision revision = 4;</code>
     * @return Whether the revision field is set.
     */
    boolean hasRevision();
    /**
     * <code>.Messages.Revision revision = 4;</code>
     * @return The revision.
     */
    Messages.Vector.Revision getRevision();
    /**
     * <code>.Messages.Revision revision = 4;</code>
     */
    Messages.Vector.RevisionOrBuilder getRevisionOrBuilder();

    /**
     * <pre>
     *kg m s^2 and such string literals
     * </pre>
     *
     * <code>string units = 5;</code>
     * @return The units.
     */
    java.lang.String getUnits();
    /**
     * <pre>
     *kg m s^2 and such string literals
     * </pre>
     *
     * <code>string units = 5;</code>
     * @return The bytes for units.
     */
    com.google.protobuf.ByteString
        getUnitsBytes();

    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated float values = 10 [packed = true];</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.Float> getValuesList();
    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated float values = 10 [packed = true];</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated float values = 10 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    float getValues(int index);
  }
  /**
   * Protobuf type {@code Messages.Vector32}
   */
  public static final class Vector32 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Messages.Vector32)
      Vector32OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Vector32.newBuilder() to construct.
    private Vector32(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Vector32() {
      name_ = "";
      units_ = "";
      values_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Vector32();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Vector32(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              components_ = input.readInt32();
              break;
            }
            case 24: {

              interleaved_ = input.readBool();
              break;
            }
            case 34: {
              Messages.Vector.Revision.Builder subBuilder = null;
              if (revision_ != null) {
                subBuilder = revision_.toBuilder();
              }
              revision_ = input.readMessage(Messages.Vector.Revision.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(revision_);
                revision_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              units_ = s;
              break;
            }
            case 85: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                values_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              values_.addFloat(input.readFloat());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                values_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          values_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Messages.Vector.internal_static_Messages_Vector32_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Messages.Vector.internal_static_Messages_Vector32_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Messages.Vector.Vector32.class, Messages.Vector.Vector32.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMPONENTS_FIELD_NUMBER = 2;
    private int components_;
    /**
     * <code>int32 components = 2;</code>
     * @return The components.
     */
    @java.lang.Override
    public int getComponents() {
      return components_;
    }

    public static final int INTERLEAVED_FIELD_NUMBER = 3;
    private boolean interleaved_;
    /**
     * <code>bool interleaved = 3;</code>
     * @return The interleaved.
     */
    @java.lang.Override
    public boolean getInterleaved() {
      return interleaved_;
    }

    public static final int REVISION_FIELD_NUMBER = 4;
    private Messages.Vector.Revision revision_;
    /**
     * <code>.Messages.Revision revision = 4;</code>
     * @return Whether the revision field is set.
     */
    @java.lang.Override
    public boolean hasRevision() {
      return revision_ != null;
    }
    /**
     * <code>.Messages.Revision revision = 4;</code>
     * @return The revision.
     */
    @java.lang.Override
    public Messages.Vector.Revision getRevision() {
      return revision_ == null ? Messages.Vector.Revision.getDefaultInstance() : revision_;
    }
    /**
     * <code>.Messages.Revision revision = 4;</code>
     */
    @java.lang.Override
    public Messages.Vector.RevisionOrBuilder getRevisionOrBuilder() {
      return getRevision();
    }

    public static final int UNITS_FIELD_NUMBER = 5;
    private volatile java.lang.Object units_;
    /**
     * <pre>
     *kg m s^2 and such string literals
     * </pre>
     *
     * <code>string units = 5;</code>
     * @return The units.
     */
    @java.lang.Override
    public java.lang.String getUnits() {
      java.lang.Object ref = units_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        units_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *kg m s^2 and such string literals
     * </pre>
     *
     * <code>string units = 5;</code>
     * @return The bytes for units.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUnitsBytes() {
      java.lang.Object ref = units_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        units_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUES_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.FloatList values_;
    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated float values = 10 [packed = true];</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getValuesList() {
      return values_;
    }
    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated float values = 10 [packed = true];</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated float values = 10 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public float getValues(int index) {
      return values_.getFloat(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (components_ != 0) {
        output.writeInt32(2, components_);
      }
      if (interleaved_ != false) {
        output.writeBool(3, interleaved_);
      }
      if (revision_ != null) {
        output.writeMessage(4, getRevision());
      }
      if (!getUnitsBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, units_);
      }
      if (getValuesList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeFloatNoTag(values_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (components_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, components_);
      }
      if (interleaved_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, interleaved_);
      }
      if (revision_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getRevision());
      }
      if (!getUnitsBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, units_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValuesList().size();
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Messages.Vector.Vector32)) {
        return super.equals(obj);
      }
      Messages.Vector.Vector32 other = (Messages.Vector.Vector32) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getComponents()
          != other.getComponents()) return false;
      if (getInterleaved()
          != other.getInterleaved()) return false;
      if (hasRevision() != other.hasRevision()) return false;
      if (hasRevision()) {
        if (!getRevision()
            .equals(other.getRevision())) return false;
      }
      if (!getUnits()
          .equals(other.getUnits())) return false;
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + COMPONENTS_FIELD_NUMBER;
      hash = (53 * hash) + getComponents();
      hash = (37 * hash) + INTERLEAVED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInterleaved());
      if (hasRevision()) {
        hash = (37 * hash) + REVISION_FIELD_NUMBER;
        hash = (53 * hash) + getRevision().hashCode();
      }
      hash = (37 * hash) + UNITS_FIELD_NUMBER;
      hash = (53 * hash) + getUnits().hashCode();
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Messages.Vector.Vector32 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Vector32 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Vector32 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Vector32 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Vector32 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Vector32 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Vector32 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Vector32 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Vector32 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Messages.Vector.Vector32 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Vector32 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Vector32 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Messages.Vector.Vector32 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Messages.Vector32}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Messages.Vector32)
        Messages.Vector.Vector32OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Messages.Vector.internal_static_Messages_Vector32_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Messages.Vector.internal_static_Messages_Vector32_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Messages.Vector.Vector32.class, Messages.Vector.Vector32.Builder.class);
      }

      // Construct using Messages.Vector.Vector32.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        components_ = 0;

        interleaved_ = false;

        if (revisionBuilder_ == null) {
          revision_ = null;
        } else {
          revision_ = null;
          revisionBuilder_ = null;
        }
        units_ = "";

        values_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Messages.Vector.internal_static_Messages_Vector32_descriptor;
      }

      @java.lang.Override
      public Messages.Vector.Vector32 getDefaultInstanceForType() {
        return Messages.Vector.Vector32.getDefaultInstance();
      }

      @java.lang.Override
      public Messages.Vector.Vector32 build() {
        Messages.Vector.Vector32 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Messages.Vector.Vector32 buildPartial() {
        Messages.Vector.Vector32 result = new Messages.Vector.Vector32(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.components_ = components_;
        result.interleaved_ = interleaved_;
        if (revisionBuilder_ == null) {
          result.revision_ = revision_;
        } else {
          result.revision_ = revisionBuilder_.build();
        }
        result.units_ = units_;
        if (((bitField0_ & 0x00000001) != 0)) {
          values_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Messages.Vector.Vector32) {
          return mergeFrom((Messages.Vector.Vector32)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Messages.Vector.Vector32 other) {
        if (other == Messages.Vector.Vector32.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getComponents() != 0) {
          setComponents(other.getComponents());
        }
        if (other.getInterleaved() != false) {
          setInterleaved(other.getInterleaved());
        }
        if (other.hasRevision()) {
          mergeRevision(other.getRevision());
        }
        if (!other.getUnits().isEmpty()) {
          units_ = other.units_;
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Messages.Vector.Vector32 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Messages.Vector.Vector32) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int components_ ;
      /**
       * <code>int32 components = 2;</code>
       * @return The components.
       */
      @java.lang.Override
      public int getComponents() {
        return components_;
      }
      /**
       * <code>int32 components = 2;</code>
       * @param value The components to set.
       * @return This builder for chaining.
       */
      public Builder setComponents(int value) {
        
        components_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 components = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearComponents() {
        
        components_ = 0;
        onChanged();
        return this;
      }

      private boolean interleaved_ ;
      /**
       * <code>bool interleaved = 3;</code>
       * @return The interleaved.
       */
      @java.lang.Override
      public boolean getInterleaved() {
        return interleaved_;
      }
      /**
       * <code>bool interleaved = 3;</code>
       * @param value The interleaved to set.
       * @return This builder for chaining.
       */
      public Builder setInterleaved(boolean value) {
        
        interleaved_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool interleaved = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterleaved() {
        
        interleaved_ = false;
        onChanged();
        return this;
      }

      private Messages.Vector.Revision revision_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Messages.Vector.Revision, Messages.Vector.Revision.Builder, Messages.Vector.RevisionOrBuilder> revisionBuilder_;
      /**
       * <code>.Messages.Revision revision = 4;</code>
       * @return Whether the revision field is set.
       */
      public boolean hasRevision() {
        return revisionBuilder_ != null || revision_ != null;
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       * @return The revision.
       */
      public Messages.Vector.Revision getRevision() {
        if (revisionBuilder_ == null) {
          return revision_ == null ? Messages.Vector.Revision.getDefaultInstance() : revision_;
        } else {
          return revisionBuilder_.getMessage();
        }
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Builder setRevision(Messages.Vector.Revision value) {
        if (revisionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          revision_ = value;
          onChanged();
        } else {
          revisionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Builder setRevision(
          Messages.Vector.Revision.Builder builderForValue) {
        if (revisionBuilder_ == null) {
          revision_ = builderForValue.build();
          onChanged();
        } else {
          revisionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Builder mergeRevision(Messages.Vector.Revision value) {
        if (revisionBuilder_ == null) {
          if (revision_ != null) {
            revision_ =
              Messages.Vector.Revision.newBuilder(revision_).mergeFrom(value).buildPartial();
          } else {
            revision_ = value;
          }
          onChanged();
        } else {
          revisionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Builder clearRevision() {
        if (revisionBuilder_ == null) {
          revision_ = null;
          onChanged();
        } else {
          revision_ = null;
          revisionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Messages.Vector.Revision.Builder getRevisionBuilder() {
        
        onChanged();
        return getRevisionFieldBuilder().getBuilder();
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Messages.Vector.RevisionOrBuilder getRevisionOrBuilder() {
        if (revisionBuilder_ != null) {
          return revisionBuilder_.getMessageOrBuilder();
        } else {
          return revision_ == null ?
              Messages.Vector.Revision.getDefaultInstance() : revision_;
        }
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Messages.Vector.Revision, Messages.Vector.Revision.Builder, Messages.Vector.RevisionOrBuilder> 
          getRevisionFieldBuilder() {
        if (revisionBuilder_ == null) {
          revisionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Messages.Vector.Revision, Messages.Vector.Revision.Builder, Messages.Vector.RevisionOrBuilder>(
                  getRevision(),
                  getParentForChildren(),
                  isClean());
          revision_ = null;
        }
        return revisionBuilder_;
      }

      private java.lang.Object units_ = "";
      /**
       * <pre>
       *kg m s^2 and such string literals
       * </pre>
       *
       * <code>string units = 5;</code>
       * @return The units.
       */
      public java.lang.String getUnits() {
        java.lang.Object ref = units_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          units_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *kg m s^2 and such string literals
       * </pre>
       *
       * <code>string units = 5;</code>
       * @return The bytes for units.
       */
      public com.google.protobuf.ByteString
          getUnitsBytes() {
        java.lang.Object ref = units_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          units_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *kg m s^2 and such string literals
       * </pre>
       *
       * <code>string units = 5;</code>
       * @param value The units to set.
       * @return This builder for chaining.
       */
      public Builder setUnits(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        units_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *kg m s^2 and such string literals
       * </pre>
       *
       * <code>string units = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnits() {
        
        units_ = getDefaultInstance().getUnits();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *kg m s^2 and such string literals
       * </pre>
       *
       * <code>string units = 5;</code>
       * @param value The bytes for units to set.
       * @return This builder for chaining.
       */
      public Builder setUnitsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        units_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList values_ = emptyFloatList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          values_ = mutableCopy(values_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated float values = 10 [packed = true];</code>
       * @return A list containing the values.
       */
      public java.util.List<java.lang.Float>
          getValuesList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(values_) : values_;
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated float values = 10 [packed = true];</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated float values = 10 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public float getValues(int index) {
        return values_.getFloat(index);
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated float values = 10 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, float value) {
        ensureValuesIsMutable();
        values_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated float values = 10 [packed = true];</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(float value) {
        ensureValuesIsMutable();
        values_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated float values = 10 [packed = true];</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated float values = 10 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        values_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Messages.Vector32)
    }

    // @@protoc_insertion_point(class_scope:Messages.Vector32)
    private static final Messages.Vector.Vector32 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Messages.Vector.Vector32();
    }

    public static Messages.Vector.Vector32 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Vector32>
        PARSER = new com.google.protobuf.AbstractParser<Vector32>() {
      @java.lang.Override
      public Vector32 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector32(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Vector32> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Vector32> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Messages.Vector.Vector32 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Vector64OrBuilder extends
      // @@protoc_insertion_point(interface_extends:Messages.Vector64)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 components = 2;</code>
     * @return The components.
     */
    int getComponents();

    /**
     * <code>bool interleaved = 3;</code>
     * @return The interleaved.
     */
    boolean getInterleaved();

    /**
     * <code>.Messages.Revision revision = 4;</code>
     * @return Whether the revision field is set.
     */
    boolean hasRevision();
    /**
     * <code>.Messages.Revision revision = 4;</code>
     * @return The revision.
     */
    Messages.Vector.Revision getRevision();
    /**
     * <code>.Messages.Revision revision = 4;</code>
     */
    Messages.Vector.RevisionOrBuilder getRevisionOrBuilder();

    /**
     * <pre>
     *kg m s^2 and such string literals
     * </pre>
     *
     * <code>string units = 5;</code>
     * @return The units.
     */
    java.lang.String getUnits();
    /**
     * <pre>
     *kg m s^2 and such string literals
     * </pre>
     *
     * <code>string units = 5;</code>
     * @return The bytes for units.
     */
    com.google.protobuf.ByteString
        getUnitsBytes();

    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated double values = 10 [packed = true];</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.Double> getValuesList();
    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated double values = 10 [packed = true];</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated double values = 10 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    double getValues(int index);
  }
  /**
   * Protobuf type {@code Messages.Vector64}
   */
  public static final class Vector64 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Messages.Vector64)
      Vector64OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Vector64.newBuilder() to construct.
    private Vector64(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Vector64() {
      name_ = "";
      units_ = "";
      values_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Vector64();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Vector64(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              components_ = input.readInt32();
              break;
            }
            case 24: {

              interleaved_ = input.readBool();
              break;
            }
            case 34: {
              Messages.Vector.Revision.Builder subBuilder = null;
              if (revision_ != null) {
                subBuilder = revision_.toBuilder();
              }
              revision_ = input.readMessage(Messages.Vector.Revision.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(revision_);
                revision_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              units_ = s;
              break;
            }
            case 81: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                values_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              values_.addDouble(input.readDouble());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                values_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          values_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Messages.Vector.internal_static_Messages_Vector64_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Messages.Vector.internal_static_Messages_Vector64_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Messages.Vector.Vector64.class, Messages.Vector.Vector64.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMPONENTS_FIELD_NUMBER = 2;
    private int components_;
    /**
     * <code>int32 components = 2;</code>
     * @return The components.
     */
    @java.lang.Override
    public int getComponents() {
      return components_;
    }

    public static final int INTERLEAVED_FIELD_NUMBER = 3;
    private boolean interleaved_;
    /**
     * <code>bool interleaved = 3;</code>
     * @return The interleaved.
     */
    @java.lang.Override
    public boolean getInterleaved() {
      return interleaved_;
    }

    public static final int REVISION_FIELD_NUMBER = 4;
    private Messages.Vector.Revision revision_;
    /**
     * <code>.Messages.Revision revision = 4;</code>
     * @return Whether the revision field is set.
     */
    @java.lang.Override
    public boolean hasRevision() {
      return revision_ != null;
    }
    /**
     * <code>.Messages.Revision revision = 4;</code>
     * @return The revision.
     */
    @java.lang.Override
    public Messages.Vector.Revision getRevision() {
      return revision_ == null ? Messages.Vector.Revision.getDefaultInstance() : revision_;
    }
    /**
     * <code>.Messages.Revision revision = 4;</code>
     */
    @java.lang.Override
    public Messages.Vector.RevisionOrBuilder getRevisionOrBuilder() {
      return getRevision();
    }

    public static final int UNITS_FIELD_NUMBER = 5;
    private volatile java.lang.Object units_;
    /**
     * <pre>
     *kg m s^2 and such string literals
     * </pre>
     *
     * <code>string units = 5;</code>
     * @return The units.
     */
    @java.lang.Override
    public java.lang.String getUnits() {
      java.lang.Object ref = units_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        units_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *kg m s^2 and such string literals
     * </pre>
     *
     * <code>string units = 5;</code>
     * @return The bytes for units.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUnitsBytes() {
      java.lang.Object ref = units_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        units_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUES_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.DoubleList values_;
    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated double values = 10 [packed = true];</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getValuesList() {
      return values_;
    }
    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated double values = 10 [packed = true];</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <pre>
     *reserved
     * </pre>
     *
     * <code>repeated double values = 10 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public double getValues(int index) {
      return values_.getDouble(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (components_ != 0) {
        output.writeInt32(2, components_);
      }
      if (interleaved_ != false) {
        output.writeBool(3, interleaved_);
      }
      if (revision_ != null) {
        output.writeMessage(4, getRevision());
      }
      if (!getUnitsBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, units_);
      }
      if (getValuesList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeDoubleNoTag(values_.getDouble(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (components_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, components_);
      }
      if (interleaved_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, interleaved_);
      }
      if (revision_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getRevision());
      }
      if (!getUnitsBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, units_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getValuesList().size();
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Messages.Vector.Vector64)) {
        return super.equals(obj);
      }
      Messages.Vector.Vector64 other = (Messages.Vector.Vector64) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getComponents()
          != other.getComponents()) return false;
      if (getInterleaved()
          != other.getInterleaved()) return false;
      if (hasRevision() != other.hasRevision()) return false;
      if (hasRevision()) {
        if (!getRevision()
            .equals(other.getRevision())) return false;
      }
      if (!getUnits()
          .equals(other.getUnits())) return false;
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + COMPONENTS_FIELD_NUMBER;
      hash = (53 * hash) + getComponents();
      hash = (37 * hash) + INTERLEAVED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInterleaved());
      if (hasRevision()) {
        hash = (37 * hash) + REVISION_FIELD_NUMBER;
        hash = (53 * hash) + getRevision().hashCode();
      }
      hash = (37 * hash) + UNITS_FIELD_NUMBER;
      hash = (53 * hash) + getUnits().hashCode();
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Messages.Vector.Vector64 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Vector64 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Vector64 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Vector64 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Vector64 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Vector64 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Vector64 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Vector64 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Vector64 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Messages.Vector.Vector64 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Vector64 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Vector64 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Messages.Vector.Vector64 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Messages.Vector64}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Messages.Vector64)
        Messages.Vector.Vector64OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Messages.Vector.internal_static_Messages_Vector64_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Messages.Vector.internal_static_Messages_Vector64_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Messages.Vector.Vector64.class, Messages.Vector.Vector64.Builder.class);
      }

      // Construct using Messages.Vector.Vector64.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        components_ = 0;

        interleaved_ = false;

        if (revisionBuilder_ == null) {
          revision_ = null;
        } else {
          revision_ = null;
          revisionBuilder_ = null;
        }
        units_ = "";

        values_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Messages.Vector.internal_static_Messages_Vector64_descriptor;
      }

      @java.lang.Override
      public Messages.Vector.Vector64 getDefaultInstanceForType() {
        return Messages.Vector.Vector64.getDefaultInstance();
      }

      @java.lang.Override
      public Messages.Vector.Vector64 build() {
        Messages.Vector.Vector64 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Messages.Vector.Vector64 buildPartial() {
        Messages.Vector.Vector64 result = new Messages.Vector.Vector64(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.components_ = components_;
        result.interleaved_ = interleaved_;
        if (revisionBuilder_ == null) {
          result.revision_ = revision_;
        } else {
          result.revision_ = revisionBuilder_.build();
        }
        result.units_ = units_;
        if (((bitField0_ & 0x00000001) != 0)) {
          values_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Messages.Vector.Vector64) {
          return mergeFrom((Messages.Vector.Vector64)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Messages.Vector.Vector64 other) {
        if (other == Messages.Vector.Vector64.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getComponents() != 0) {
          setComponents(other.getComponents());
        }
        if (other.getInterleaved() != false) {
          setInterleaved(other.getInterleaved());
        }
        if (other.hasRevision()) {
          mergeRevision(other.getRevision());
        }
        if (!other.getUnits().isEmpty()) {
          units_ = other.units_;
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Messages.Vector.Vector64 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Messages.Vector.Vector64) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int components_ ;
      /**
       * <code>int32 components = 2;</code>
       * @return The components.
       */
      @java.lang.Override
      public int getComponents() {
        return components_;
      }
      /**
       * <code>int32 components = 2;</code>
       * @param value The components to set.
       * @return This builder for chaining.
       */
      public Builder setComponents(int value) {
        
        components_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 components = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearComponents() {
        
        components_ = 0;
        onChanged();
        return this;
      }

      private boolean interleaved_ ;
      /**
       * <code>bool interleaved = 3;</code>
       * @return The interleaved.
       */
      @java.lang.Override
      public boolean getInterleaved() {
        return interleaved_;
      }
      /**
       * <code>bool interleaved = 3;</code>
       * @param value The interleaved to set.
       * @return This builder for chaining.
       */
      public Builder setInterleaved(boolean value) {
        
        interleaved_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool interleaved = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterleaved() {
        
        interleaved_ = false;
        onChanged();
        return this;
      }

      private Messages.Vector.Revision revision_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Messages.Vector.Revision, Messages.Vector.Revision.Builder, Messages.Vector.RevisionOrBuilder> revisionBuilder_;
      /**
       * <code>.Messages.Revision revision = 4;</code>
       * @return Whether the revision field is set.
       */
      public boolean hasRevision() {
        return revisionBuilder_ != null || revision_ != null;
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       * @return The revision.
       */
      public Messages.Vector.Revision getRevision() {
        if (revisionBuilder_ == null) {
          return revision_ == null ? Messages.Vector.Revision.getDefaultInstance() : revision_;
        } else {
          return revisionBuilder_.getMessage();
        }
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Builder setRevision(Messages.Vector.Revision value) {
        if (revisionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          revision_ = value;
          onChanged();
        } else {
          revisionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Builder setRevision(
          Messages.Vector.Revision.Builder builderForValue) {
        if (revisionBuilder_ == null) {
          revision_ = builderForValue.build();
          onChanged();
        } else {
          revisionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Builder mergeRevision(Messages.Vector.Revision value) {
        if (revisionBuilder_ == null) {
          if (revision_ != null) {
            revision_ =
              Messages.Vector.Revision.newBuilder(revision_).mergeFrom(value).buildPartial();
          } else {
            revision_ = value;
          }
          onChanged();
        } else {
          revisionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Builder clearRevision() {
        if (revisionBuilder_ == null) {
          revision_ = null;
          onChanged();
        } else {
          revision_ = null;
          revisionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Messages.Vector.Revision.Builder getRevisionBuilder() {
        
        onChanged();
        return getRevisionFieldBuilder().getBuilder();
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      public Messages.Vector.RevisionOrBuilder getRevisionOrBuilder() {
        if (revisionBuilder_ != null) {
          return revisionBuilder_.getMessageOrBuilder();
        } else {
          return revision_ == null ?
              Messages.Vector.Revision.getDefaultInstance() : revision_;
        }
      }
      /**
       * <code>.Messages.Revision revision = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Messages.Vector.Revision, Messages.Vector.Revision.Builder, Messages.Vector.RevisionOrBuilder> 
          getRevisionFieldBuilder() {
        if (revisionBuilder_ == null) {
          revisionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Messages.Vector.Revision, Messages.Vector.Revision.Builder, Messages.Vector.RevisionOrBuilder>(
                  getRevision(),
                  getParentForChildren(),
                  isClean());
          revision_ = null;
        }
        return revisionBuilder_;
      }

      private java.lang.Object units_ = "";
      /**
       * <pre>
       *kg m s^2 and such string literals
       * </pre>
       *
       * <code>string units = 5;</code>
       * @return The units.
       */
      public java.lang.String getUnits() {
        java.lang.Object ref = units_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          units_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *kg m s^2 and such string literals
       * </pre>
       *
       * <code>string units = 5;</code>
       * @return The bytes for units.
       */
      public com.google.protobuf.ByteString
          getUnitsBytes() {
        java.lang.Object ref = units_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          units_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *kg m s^2 and such string literals
       * </pre>
       *
       * <code>string units = 5;</code>
       * @param value The units to set.
       * @return This builder for chaining.
       */
      public Builder setUnits(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        units_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *kg m s^2 and such string literals
       * </pre>
       *
       * <code>string units = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnits() {
        
        units_ = getDefaultInstance().getUnits();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *kg m s^2 and such string literals
       * </pre>
       *
       * <code>string units = 5;</code>
       * @param value The bytes for units to set.
       * @return This builder for chaining.
       */
      public Builder setUnitsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        units_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList values_ = emptyDoubleList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          values_ = mutableCopy(values_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated double values = 10 [packed = true];</code>
       * @return A list containing the values.
       */
      public java.util.List<java.lang.Double>
          getValuesList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(values_) : values_;
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated double values = 10 [packed = true];</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated double values = 10 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public double getValues(int index) {
        return values_.getDouble(index);
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated double values = 10 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, double value) {
        ensureValuesIsMutable();
        values_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated double values = 10 [packed = true];</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(double value) {
        ensureValuesIsMutable();
        values_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated double values = 10 [packed = true];</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *reserved
       * </pre>
       *
       * <code>repeated double values = 10 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        values_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Messages.Vector64)
    }

    // @@protoc_insertion_point(class_scope:Messages.Vector64)
    private static final Messages.Vector.Vector64 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Messages.Vector.Vector64();
    }

    public static Messages.Vector.Vector64 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Vector64>
        PARSER = new com.google.protobuf.AbstractParser<Vector64>() {
      @java.lang.Override
      public Vector64 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector64(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Vector64> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Vector64> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Messages.Vector.Vector64 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IndicesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Messages.Indices)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated int32 values = 2 [packed = true];</code>
     * @return A list containing the values.
     */
    java.util.List<java.lang.Integer> getValuesList();
    /**
     * <code>repeated int32 values = 2 [packed = true];</code>
     * @return The count of values.
     */
    int getValuesCount();
    /**
     * <code>repeated int32 values = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    int getValues(int index);
  }
  /**
   * Protobuf type {@code Messages.Indices}
   */
  public static final class Indices extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Messages.Indices)
      IndicesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Indices.newBuilder() to construct.
    private Indices(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Indices() {
      name_ = "";
      values_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Indices();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Indices(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                values_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              values_.addInt(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                values_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          values_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Messages.Vector.internal_static_Messages_Indices_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Messages.Vector.internal_static_Messages_Indices_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Messages.Vector.Indices.class, Messages.Vector.Indices.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList values_;
    /**
     * <code>repeated int32 values = 2 [packed = true];</code>
     * @return A list containing the values.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated int32 values = 2 [packed = true];</code>
     * @return The count of values.
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated int32 values = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The values at the given index.
     */
    public int getValues(int index) {
      return values_.getInt(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (getValuesList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeInt32NoTag(values_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < values_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(values_.getInt(i));
        }
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Messages.Vector.Indices)) {
        return super.equals(obj);
      }
      Messages.Vector.Indices other = (Messages.Vector.Indices) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Messages.Vector.Indices parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Indices parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Indices parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Indices parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Indices parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Indices parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Indices parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Indices parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Indices parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Messages.Vector.Indices parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Indices parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Indices parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Messages.Vector.Indices prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Messages.Indices}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Messages.Indices)
        Messages.Vector.IndicesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Messages.Vector.internal_static_Messages_Indices_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Messages.Vector.internal_static_Messages_Indices_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Messages.Vector.Indices.class, Messages.Vector.Indices.Builder.class);
      }

      // Construct using Messages.Vector.Indices.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        values_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Messages.Vector.internal_static_Messages_Indices_descriptor;
      }

      @java.lang.Override
      public Messages.Vector.Indices getDefaultInstanceForType() {
        return Messages.Vector.Indices.getDefaultInstance();
      }

      @java.lang.Override
      public Messages.Vector.Indices build() {
        Messages.Vector.Indices result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Messages.Vector.Indices buildPartial() {
        Messages.Vector.Indices result = new Messages.Vector.Indices(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        if (((bitField0_ & 0x00000001) != 0)) {
          values_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Messages.Vector.Indices) {
          return mergeFrom((Messages.Vector.Indices)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Messages.Vector.Indices other) {
        if (other == Messages.Vector.Indices.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Messages.Vector.Indices parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Messages.Vector.Indices) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList values_ = emptyIntList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          values_ = mutableCopy(values_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 values = 2 [packed = true];</code>
       * @return A list containing the values.
       */
      public java.util.List<java.lang.Integer>
          getValuesList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(values_) : values_;
      }
      /**
       * <code>repeated int32 values = 2 [packed = true];</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated int32 values = 2 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public int getValues(int index) {
        return values_.getInt(index);
      }
      /**
       * <code>repeated int32 values = 2 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       * @return This builder for chaining.
       */
      public Builder setValues(
          int index, int value) {
        ensureValuesIsMutable();
        values_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 2 [packed = true];</code>
       * @param value The values to add.
       * @return This builder for chaining.
       */
      public Builder addValues(int value) {
        ensureValuesIsMutable();
        values_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 2 [packed = true];</code>
       * @param values The values to add.
       * @return This builder for chaining.
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 values = 2 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearValues() {
        values_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Messages.Indices)
    }

    // @@protoc_insertion_point(class_scope:Messages.Indices)
    private static final Messages.Vector.Indices DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Messages.Vector.Indices();
    }

    public static Messages.Vector.Indices getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Indices>
        PARSER = new com.google.protobuf.AbstractParser<Indices>() {
      @java.lang.Override
      public Indices parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Indices(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Indices> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Indices> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Messages.Vector.Indices getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ElementsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Messages.Elements)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 indices = 1 [packed = true];</code>
     * @return A list containing the indices.
     */
    java.util.List<java.lang.Integer> getIndicesList();
    /**
     * <code>repeated int32 indices = 1 [packed = true];</code>
     * @return The count of indices.
     */
    int getIndicesCount();
    /**
     * <code>repeated int32 indices = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The indices at the given index.
     */
    int getIndices(int index);

    /**
     * <code>repeated int32 strides = 2 [packed = true];</code>
     * @return A list containing the strides.
     */
    java.util.List<java.lang.Integer> getStridesList();
    /**
     * <code>repeated int32 strides = 2 [packed = true];</code>
     * @return The count of strides.
     */
    int getStridesCount();
    /**
     * <code>repeated int32 strides = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The strides at the given index.
     */
    int getStrides(int index);

    /**
     * <code>repeated int32 offsets = 3 [packed = true];</code>
     * @return A list containing the offsets.
     */
    java.util.List<java.lang.Integer> getOffsetsList();
    /**
     * <code>repeated int32 offsets = 3 [packed = true];</code>
     * @return The count of offsets.
     */
    int getOffsetsCount();
    /**
     * <code>repeated int32 offsets = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The offsets at the given index.
     */
    int getOffsets(int index);

    /**
     * <code>repeated int32 types = 4 [packed = true];</code>
     * @return A list containing the types.
     */
    java.util.List<java.lang.Integer> getTypesList();
    /**
     * <code>repeated int32 types = 4 [packed = true];</code>
     * @return The count of types.
     */
    int getTypesCount();
    /**
     * <code>repeated int32 types = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The types at the given index.
     */
    int getTypes(int index);

    /**
     * <code>repeated int32 ids = 5 [packed = true];</code>
     * @return A list containing the ids.
     */
    java.util.List<java.lang.Integer> getIdsList();
    /**
     * <code>repeated int32 ids = 5 [packed = true];</code>
     * @return The count of ids.
     */
    int getIdsCount();
    /**
     * <code>repeated int32 ids = 5 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The ids at the given index.
     */
    int getIds(int index);

    /**
     * <code>repeated int32 id_offsets = 6 [packed = true];</code>
     * @return A list containing the idOffsets.
     */
    java.util.List<java.lang.Integer> getIdOffsetsList();
    /**
     * <code>repeated int32 id_offsets = 6 [packed = true];</code>
     * @return The count of idOffsets.
     */
    int getIdOffsetsCount();
    /**
     * <code>repeated int32 id_offsets = 6 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The idOffsets at the given index.
     */
    int getIdOffsets(int index);

    /**
     * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
     * @return A list containing the numElementsWithId.
     */
    java.util.List<java.lang.Integer> getNumElementsWithIdList();
    /**
     * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
     * @return The count of numElementsWithId.
     */
    int getNumElementsWithIdCount();
    /**
     * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The numElementsWithId at the given index.
     */
    int getNumElementsWithId(int index);

    /**
     * <code>repeated int32 id_to_index = 8 [packed = true];</code>
     * @return A list containing the idToIndex.
     */
    java.util.List<java.lang.Integer> getIdToIndexList();
    /**
     * <code>repeated int32 id_to_index = 8 [packed = true];</code>
     * @return The count of idToIndex.
     */
    int getIdToIndexCount();
    /**
     * <code>repeated int32 id_to_index = 8 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The idToIndex at the given index.
     */
    int getIdToIndex(int index);

    /**
     * <code>repeated int32 flags = 9 [packed = true];</code>
     * @return A list containing the flags.
     */
    java.util.List<java.lang.Integer> getFlagsList();
    /**
     * <code>repeated int32 flags = 9 [packed = true];</code>
     * @return The count of flags.
     */
    int getFlagsCount();
    /**
     * <code>repeated int32 flags = 9 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The flags at the given index.
     */
    int getFlags(int index);

    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double centers = 10 [packed = true];</code>
     * @return A list containing the centers.
     */
    java.util.List<java.lang.Double> getCentersList();
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double centers = 10 [packed = true];</code>
     * @return The count of centers.
     */
    int getCentersCount();
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double centers = 10 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The centers at the given index.
     */
    double getCenters(int index);

    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double lengths = 11 [packed = true];</code>
     * @return A list containing the lengths.
     */
    java.util.List<java.lang.Double> getLengthsList();
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double lengths = 11 [packed = true];</code>
     * @return The count of lengths.
     */
    int getLengthsCount();
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double lengths = 11 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The lengths at the given index.
     */
    double getLengths(int index);

    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double areas = 12 [packed = true];</code>
     * @return A list containing the areas.
     */
    java.util.List<java.lang.Double> getAreasList();
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double areas = 12 [packed = true];</code>
     * @return The count of areas.
     */
    int getAreasCount();
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double areas = 12 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The areas at the given index.
     */
    double getAreas(int index);

    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double volumes = 13 [packed = true];</code>
     * @return A list containing the volumes.
     */
    java.util.List<java.lang.Double> getVolumesList();
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double volumes = 13 [packed = true];</code>
     * @return The count of volumes.
     */
    int getVolumesCount();
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double volumes = 13 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The volumes at the given index.
     */
    double getVolumes(int index);
  }
  /**
   * <pre>
   *defined here to take advantage of packed arena allocation (only enabled within this proto file)
   * </pre>
   *
   * Protobuf type {@code Messages.Elements}
   */
  public static final class Elements extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Messages.Elements)
      ElementsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Elements.newBuilder() to construct.
    private Elements(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Elements() {
      indices_ = emptyIntList();
      strides_ = emptyIntList();
      offsets_ = emptyIntList();
      types_ = emptyIntList();
      ids_ = emptyIntList();
      idOffsets_ = emptyIntList();
      numElementsWithId_ = emptyIntList();
      idToIndex_ = emptyIntList();
      flags_ = emptyIntList();
      centers_ = emptyDoubleList();
      lengths_ = emptyDoubleList();
      areas_ = emptyDoubleList();
      volumes_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Elements();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Elements(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                indices_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              indices_.addInt(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                indices_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                indices_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                strides_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              strides_.addInt(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                strides_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                strides_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                offsets_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              offsets_.addInt(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                offsets_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                offsets_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                types_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              types_.addInt(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                types_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                types_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                ids_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              ids_.addInt(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                ids_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                ids_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                idOffsets_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              idOffsets_.addInt(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
                idOffsets_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                idOffsets_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                numElementsWithId_ = newIntList();
                mutable_bitField0_ |= 0x00000040;
              }
              numElementsWithId_.addInt(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) != 0) && input.getBytesUntilLimit() > 0) {
                numElementsWithId_ = newIntList();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                numElementsWithId_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                idToIndex_ = newIntList();
                mutable_bitField0_ |= 0x00000080;
              }
              idToIndex_.addInt(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                idToIndex_ = newIntList();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                idToIndex_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                flags_ = newIntList();
                mutable_bitField0_ |= 0x00000100;
              }
              flags_.addInt(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) != 0) && input.getBytesUntilLimit() > 0) {
                flags_ = newIntList();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                flags_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 81: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                centers_ = newDoubleList();
                mutable_bitField0_ |= 0x00000200;
              }
              centers_.addDouble(input.readDouble());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) != 0) && input.getBytesUntilLimit() > 0) {
                centers_ = newDoubleList();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                centers_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 89: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                lengths_ = newDoubleList();
                mutable_bitField0_ |= 0x00000400;
              }
              lengths_.addDouble(input.readDouble());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) != 0) && input.getBytesUntilLimit() > 0) {
                lengths_ = newDoubleList();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                lengths_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 97: {
              if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                areas_ = newDoubleList();
                mutable_bitField0_ |= 0x00000800;
              }
              areas_.addDouble(input.readDouble());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) != 0) && input.getBytesUntilLimit() > 0) {
                areas_ = newDoubleList();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                areas_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 105: {
              if (!((mutable_bitField0_ & 0x00001000) != 0)) {
                volumes_ = newDoubleList();
                mutable_bitField0_ |= 0x00001000;
              }
              volumes_.addDouble(input.readDouble());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) != 0) && input.getBytesUntilLimit() > 0) {
                volumes_ = newDoubleList();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                volumes_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          indices_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          strides_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          offsets_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          types_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          ids_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          idOffsets_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          numElementsWithId_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          idToIndex_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000100) != 0)) {
          flags_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000200) != 0)) {
          centers_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000400) != 0)) {
          lengths_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000800) != 0)) {
          areas_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00001000) != 0)) {
          volumes_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Messages.Vector.internal_static_Messages_Elements_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Messages.Vector.internal_static_Messages_Elements_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Messages.Vector.Elements.class, Messages.Vector.Elements.Builder.class);
    }

    public static final int INDICES_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList indices_;
    /**
     * <code>repeated int32 indices = 1 [packed = true];</code>
     * @return A list containing the indices.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getIndicesList() {
      return indices_;
    }
    /**
     * <code>repeated int32 indices = 1 [packed = true];</code>
     * @return The count of indices.
     */
    public int getIndicesCount() {
      return indices_.size();
    }
    /**
     * <code>repeated int32 indices = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The indices at the given index.
     */
    public int getIndices(int index) {
      return indices_.getInt(index);
    }
    private int indicesMemoizedSerializedSize = -1;

    public static final int STRIDES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList strides_;
    /**
     * <code>repeated int32 strides = 2 [packed = true];</code>
     * @return A list containing the strides.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getStridesList() {
      return strides_;
    }
    /**
     * <code>repeated int32 strides = 2 [packed = true];</code>
     * @return The count of strides.
     */
    public int getStridesCount() {
      return strides_.size();
    }
    /**
     * <code>repeated int32 strides = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The strides at the given index.
     */
    public int getStrides(int index) {
      return strides_.getInt(index);
    }
    private int stridesMemoizedSerializedSize = -1;

    public static final int OFFSETS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList offsets_;
    /**
     * <code>repeated int32 offsets = 3 [packed = true];</code>
     * @return A list containing the offsets.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getOffsetsList() {
      return offsets_;
    }
    /**
     * <code>repeated int32 offsets = 3 [packed = true];</code>
     * @return The count of offsets.
     */
    public int getOffsetsCount() {
      return offsets_.size();
    }
    /**
     * <code>repeated int32 offsets = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The offsets at the given index.
     */
    public int getOffsets(int index) {
      return offsets_.getInt(index);
    }
    private int offsetsMemoizedSerializedSize = -1;

    public static final int TYPES_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList types_;
    /**
     * <code>repeated int32 types = 4 [packed = true];</code>
     * @return A list containing the types.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getTypesList() {
      return types_;
    }
    /**
     * <code>repeated int32 types = 4 [packed = true];</code>
     * @return The count of types.
     */
    public int getTypesCount() {
      return types_.size();
    }
    /**
     * <code>repeated int32 types = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The types at the given index.
     */
    public int getTypes(int index) {
      return types_.getInt(index);
    }
    private int typesMemoizedSerializedSize = -1;

    public static final int IDS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.IntList ids_;
    /**
     * <code>repeated int32 ids = 5 [packed = true];</code>
     * @return A list containing the ids.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getIdsList() {
      return ids_;
    }
    /**
     * <code>repeated int32 ids = 5 [packed = true];</code>
     * @return The count of ids.
     */
    public int getIdsCount() {
      return ids_.size();
    }
    /**
     * <code>repeated int32 ids = 5 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The ids at the given index.
     */
    public int getIds(int index) {
      return ids_.getInt(index);
    }
    private int idsMemoizedSerializedSize = -1;

    public static final int ID_OFFSETS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.IntList idOffsets_;
    /**
     * <code>repeated int32 id_offsets = 6 [packed = true];</code>
     * @return A list containing the idOffsets.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getIdOffsetsList() {
      return idOffsets_;
    }
    /**
     * <code>repeated int32 id_offsets = 6 [packed = true];</code>
     * @return The count of idOffsets.
     */
    public int getIdOffsetsCount() {
      return idOffsets_.size();
    }
    /**
     * <code>repeated int32 id_offsets = 6 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The idOffsets at the given index.
     */
    public int getIdOffsets(int index) {
      return idOffsets_.getInt(index);
    }
    private int idOffsetsMemoizedSerializedSize = -1;

    public static final int NUM_ELEMENTS_WITH_ID_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.IntList numElementsWithId_;
    /**
     * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
     * @return A list containing the numElementsWithId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getNumElementsWithIdList() {
      return numElementsWithId_;
    }
    /**
     * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
     * @return The count of numElementsWithId.
     */
    public int getNumElementsWithIdCount() {
      return numElementsWithId_.size();
    }
    /**
     * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The numElementsWithId at the given index.
     */
    public int getNumElementsWithId(int index) {
      return numElementsWithId_.getInt(index);
    }
    private int numElementsWithIdMemoizedSerializedSize = -1;

    public static final int ID_TO_INDEX_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.IntList idToIndex_;
    /**
     * <code>repeated int32 id_to_index = 8 [packed = true];</code>
     * @return A list containing the idToIndex.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getIdToIndexList() {
      return idToIndex_;
    }
    /**
     * <code>repeated int32 id_to_index = 8 [packed = true];</code>
     * @return The count of idToIndex.
     */
    public int getIdToIndexCount() {
      return idToIndex_.size();
    }
    /**
     * <code>repeated int32 id_to_index = 8 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The idToIndex at the given index.
     */
    public int getIdToIndex(int index) {
      return idToIndex_.getInt(index);
    }
    private int idToIndexMemoizedSerializedSize = -1;

    public static final int FLAGS_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.IntList flags_;
    /**
     * <code>repeated int32 flags = 9 [packed = true];</code>
     * @return A list containing the flags.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getFlagsList() {
      return flags_;
    }
    /**
     * <code>repeated int32 flags = 9 [packed = true];</code>
     * @return The count of flags.
     */
    public int getFlagsCount() {
      return flags_.size();
    }
    /**
     * <code>repeated int32 flags = 9 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The flags at the given index.
     */
    public int getFlags(int index) {
      return flags_.getInt(index);
    }
    private int flagsMemoizedSerializedSize = -1;

    public static final int CENTERS_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.DoubleList centers_;
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double centers = 10 [packed = true];</code>
     * @return A list containing the centers.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getCentersList() {
      return centers_;
    }
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double centers = 10 [packed = true];</code>
     * @return The count of centers.
     */
    public int getCentersCount() {
      return centers_.size();
    }
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double centers = 10 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The centers at the given index.
     */
    public double getCenters(int index) {
      return centers_.getDouble(index);
    }
    private int centersMemoizedSerializedSize = -1;

    public static final int LENGTHS_FIELD_NUMBER = 11;
    private com.google.protobuf.Internal.DoubleList lengths_;
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double lengths = 11 [packed = true];</code>
     * @return A list containing the lengths.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getLengthsList() {
      return lengths_;
    }
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double lengths = 11 [packed = true];</code>
     * @return The count of lengths.
     */
    public int getLengthsCount() {
      return lengths_.size();
    }
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double lengths = 11 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The lengths at the given index.
     */
    public double getLengths(int index) {
      return lengths_.getDouble(index);
    }
    private int lengthsMemoizedSerializedSize = -1;

    public static final int AREAS_FIELD_NUMBER = 12;
    private com.google.protobuf.Internal.DoubleList areas_;
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double areas = 12 [packed = true];</code>
     * @return A list containing the areas.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getAreasList() {
      return areas_;
    }
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double areas = 12 [packed = true];</code>
     * @return The count of areas.
     */
    public int getAreasCount() {
      return areas_.size();
    }
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double areas = 12 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The areas at the given index.
     */
    public double getAreas(int index) {
      return areas_.getDouble(index);
    }
    private int areasMemoizedSerializedSize = -1;

    public static final int VOLUMES_FIELD_NUMBER = 13;
    private com.google.protobuf.Internal.DoubleList volumes_;
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double volumes = 13 [packed = true];</code>
     * @return A list containing the volumes.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getVolumesList() {
      return volumes_;
    }
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double volumes = 13 [packed = true];</code>
     * @return The count of volumes.
     */
    public int getVolumesCount() {
      return volumes_.size();
    }
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>repeated double volumes = 13 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The volumes at the given index.
     */
    public double getVolumes(int index) {
      return volumes_.getDouble(index);
    }
    private int volumesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getIndicesList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(indicesMemoizedSerializedSize);
      }
      for (int i = 0; i < indices_.size(); i++) {
        output.writeInt32NoTag(indices_.getInt(i));
      }
      if (getStridesList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(stridesMemoizedSerializedSize);
      }
      for (int i = 0; i < strides_.size(); i++) {
        output.writeInt32NoTag(strides_.getInt(i));
      }
      if (getOffsetsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(offsetsMemoizedSerializedSize);
      }
      for (int i = 0; i < offsets_.size(); i++) {
        output.writeInt32NoTag(offsets_.getInt(i));
      }
      if (getTypesList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(typesMemoizedSerializedSize);
      }
      for (int i = 0; i < types_.size(); i++) {
        output.writeInt32NoTag(types_.getInt(i));
      }
      if (getIdsList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(idsMemoizedSerializedSize);
      }
      for (int i = 0; i < ids_.size(); i++) {
        output.writeInt32NoTag(ids_.getInt(i));
      }
      if (getIdOffsetsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(idOffsetsMemoizedSerializedSize);
      }
      for (int i = 0; i < idOffsets_.size(); i++) {
        output.writeInt32NoTag(idOffsets_.getInt(i));
      }
      if (getNumElementsWithIdList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(numElementsWithIdMemoizedSerializedSize);
      }
      for (int i = 0; i < numElementsWithId_.size(); i++) {
        output.writeInt32NoTag(numElementsWithId_.getInt(i));
      }
      if (getIdToIndexList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(idToIndexMemoizedSerializedSize);
      }
      for (int i = 0; i < idToIndex_.size(); i++) {
        output.writeInt32NoTag(idToIndex_.getInt(i));
      }
      if (getFlagsList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(flagsMemoizedSerializedSize);
      }
      for (int i = 0; i < flags_.size(); i++) {
        output.writeInt32NoTag(flags_.getInt(i));
      }
      if (getCentersList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(centersMemoizedSerializedSize);
      }
      for (int i = 0; i < centers_.size(); i++) {
        output.writeDoubleNoTag(centers_.getDouble(i));
      }
      if (getLengthsList().size() > 0) {
        output.writeUInt32NoTag(90);
        output.writeUInt32NoTag(lengthsMemoizedSerializedSize);
      }
      for (int i = 0; i < lengths_.size(); i++) {
        output.writeDoubleNoTag(lengths_.getDouble(i));
      }
      if (getAreasList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(areasMemoizedSerializedSize);
      }
      for (int i = 0; i < areas_.size(); i++) {
        output.writeDoubleNoTag(areas_.getDouble(i));
      }
      if (getVolumesList().size() > 0) {
        output.writeUInt32NoTag(106);
        output.writeUInt32NoTag(volumesMemoizedSerializedSize);
      }
      for (int i = 0; i < volumes_.size(); i++) {
        output.writeDoubleNoTag(volumes_.getDouble(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < indices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(indices_.getInt(i));
        }
        size += dataSize;
        if (!getIndicesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        indicesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strides_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(strides_.getInt(i));
        }
        size += dataSize;
        if (!getStridesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        stridesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < offsets_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(offsets_.getInt(i));
        }
        size += dataSize;
        if (!getOffsetsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        offsetsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < types_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(types_.getInt(i));
        }
        size += dataSize;
        if (!getTypesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        typesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ids_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(ids_.getInt(i));
        }
        size += dataSize;
        if (!getIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        idsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < idOffsets_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(idOffsets_.getInt(i));
        }
        size += dataSize;
        if (!getIdOffsetsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        idOffsetsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < numElementsWithId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(numElementsWithId_.getInt(i));
        }
        size += dataSize;
        if (!getNumElementsWithIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        numElementsWithIdMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < idToIndex_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(idToIndex_.getInt(i));
        }
        size += dataSize;
        if (!getIdToIndexList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        idToIndexMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < flags_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(flags_.getInt(i));
        }
        size += dataSize;
        if (!getFlagsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        flagsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getCentersList().size();
        size += dataSize;
        if (!getCentersList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        centersMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getLengthsList().size();
        size += dataSize;
        if (!getLengthsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lengthsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAreasList().size();
        size += dataSize;
        if (!getAreasList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        areasMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getVolumesList().size();
        size += dataSize;
        if (!getVolumesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        volumesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Messages.Vector.Elements)) {
        return super.equals(obj);
      }
      Messages.Vector.Elements other = (Messages.Vector.Elements) obj;

      if (!getIndicesList()
          .equals(other.getIndicesList())) return false;
      if (!getStridesList()
          .equals(other.getStridesList())) return false;
      if (!getOffsetsList()
          .equals(other.getOffsetsList())) return false;
      if (!getTypesList()
          .equals(other.getTypesList())) return false;
      if (!getIdsList()
          .equals(other.getIdsList())) return false;
      if (!getIdOffsetsList()
          .equals(other.getIdOffsetsList())) return false;
      if (!getNumElementsWithIdList()
          .equals(other.getNumElementsWithIdList())) return false;
      if (!getIdToIndexList()
          .equals(other.getIdToIndexList())) return false;
      if (!getFlagsList()
          .equals(other.getFlagsList())) return false;
      if (!getCentersList()
          .equals(other.getCentersList())) return false;
      if (!getLengthsList()
          .equals(other.getLengthsList())) return false;
      if (!getAreasList()
          .equals(other.getAreasList())) return false;
      if (!getVolumesList()
          .equals(other.getVolumesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getIndicesCount() > 0) {
        hash = (37 * hash) + INDICES_FIELD_NUMBER;
        hash = (53 * hash) + getIndicesList().hashCode();
      }
      if (getStridesCount() > 0) {
        hash = (37 * hash) + STRIDES_FIELD_NUMBER;
        hash = (53 * hash) + getStridesList().hashCode();
      }
      if (getOffsetsCount() > 0) {
        hash = (37 * hash) + OFFSETS_FIELD_NUMBER;
        hash = (53 * hash) + getOffsetsList().hashCode();
      }
      if (getTypesCount() > 0) {
        hash = (37 * hash) + TYPES_FIELD_NUMBER;
        hash = (53 * hash) + getTypesList().hashCode();
      }
      if (getIdsCount() > 0) {
        hash = (37 * hash) + IDS_FIELD_NUMBER;
        hash = (53 * hash) + getIdsList().hashCode();
      }
      if (getIdOffsetsCount() > 0) {
        hash = (37 * hash) + ID_OFFSETS_FIELD_NUMBER;
        hash = (53 * hash) + getIdOffsetsList().hashCode();
      }
      if (getNumElementsWithIdCount() > 0) {
        hash = (37 * hash) + NUM_ELEMENTS_WITH_ID_FIELD_NUMBER;
        hash = (53 * hash) + getNumElementsWithIdList().hashCode();
      }
      if (getIdToIndexCount() > 0) {
        hash = (37 * hash) + ID_TO_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getIdToIndexList().hashCode();
      }
      if (getFlagsCount() > 0) {
        hash = (37 * hash) + FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getFlagsList().hashCode();
      }
      if (getCentersCount() > 0) {
        hash = (37 * hash) + CENTERS_FIELD_NUMBER;
        hash = (53 * hash) + getCentersList().hashCode();
      }
      if (getLengthsCount() > 0) {
        hash = (37 * hash) + LENGTHS_FIELD_NUMBER;
        hash = (53 * hash) + getLengthsList().hashCode();
      }
      if (getAreasCount() > 0) {
        hash = (37 * hash) + AREAS_FIELD_NUMBER;
        hash = (53 * hash) + getAreasList().hashCode();
      }
      if (getVolumesCount() > 0) {
        hash = (37 * hash) + VOLUMES_FIELD_NUMBER;
        hash = (53 * hash) + getVolumesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Messages.Vector.Elements parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Elements parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Elements parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Elements parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Elements parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Messages.Vector.Elements parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Messages.Vector.Elements parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Elements parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Elements parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Messages.Vector.Elements parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Messages.Vector.Elements parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Messages.Vector.Elements parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Messages.Vector.Elements prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *defined here to take advantage of packed arena allocation (only enabled within this proto file)
     * </pre>
     *
     * Protobuf type {@code Messages.Elements}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Messages.Elements)
        Messages.Vector.ElementsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Messages.Vector.internal_static_Messages_Elements_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Messages.Vector.internal_static_Messages_Elements_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Messages.Vector.Elements.class, Messages.Vector.Elements.Builder.class);
      }

      // Construct using Messages.Vector.Elements.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        indices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        strides_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        offsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        types_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        ids_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        idOffsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        numElementsWithId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000040);
        idToIndex_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000080);
        flags_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000100);
        centers_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000200);
        lengths_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000400);
        areas_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000800);
        volumes_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Messages.Vector.internal_static_Messages_Elements_descriptor;
      }

      @java.lang.Override
      public Messages.Vector.Elements getDefaultInstanceForType() {
        return Messages.Vector.Elements.getDefaultInstance();
      }

      @java.lang.Override
      public Messages.Vector.Elements build() {
        Messages.Vector.Elements result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Messages.Vector.Elements buildPartial() {
        Messages.Vector.Elements result = new Messages.Vector.Elements(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          indices_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.indices_ = indices_;
        if (((bitField0_ & 0x00000002) != 0)) {
          strides_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.strides_ = strides_;
        if (((bitField0_ & 0x00000004) != 0)) {
          offsets_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.offsets_ = offsets_;
        if (((bitField0_ & 0x00000008) != 0)) {
          types_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.types_ = types_;
        if (((bitField0_ & 0x00000010) != 0)) {
          ids_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.ids_ = ids_;
        if (((bitField0_ & 0x00000020) != 0)) {
          idOffsets_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.idOffsets_ = idOffsets_;
        if (((bitField0_ & 0x00000040) != 0)) {
          numElementsWithId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.numElementsWithId_ = numElementsWithId_;
        if (((bitField0_ & 0x00000080) != 0)) {
          idToIndex_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.idToIndex_ = idToIndex_;
        if (((bitField0_ & 0x00000100) != 0)) {
          flags_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.flags_ = flags_;
        if (((bitField0_ & 0x00000200) != 0)) {
          centers_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.centers_ = centers_;
        if (((bitField0_ & 0x00000400) != 0)) {
          lengths_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.lengths_ = lengths_;
        if (((bitField0_ & 0x00000800) != 0)) {
          areas_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.areas_ = areas_;
        if (((bitField0_ & 0x00001000) != 0)) {
          volumes_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.volumes_ = volumes_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Messages.Vector.Elements) {
          return mergeFrom((Messages.Vector.Elements)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Messages.Vector.Elements other) {
        if (other == Messages.Vector.Elements.getDefaultInstance()) return this;
        if (!other.indices_.isEmpty()) {
          if (indices_.isEmpty()) {
            indices_ = other.indices_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIndicesIsMutable();
            indices_.addAll(other.indices_);
          }
          onChanged();
        }
        if (!other.strides_.isEmpty()) {
          if (strides_.isEmpty()) {
            strides_ = other.strides_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStridesIsMutable();
            strides_.addAll(other.strides_);
          }
          onChanged();
        }
        if (!other.offsets_.isEmpty()) {
          if (offsets_.isEmpty()) {
            offsets_ = other.offsets_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOffsetsIsMutable();
            offsets_.addAll(other.offsets_);
          }
          onChanged();
        }
        if (!other.types_.isEmpty()) {
          if (types_.isEmpty()) {
            types_ = other.types_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTypesIsMutable();
            types_.addAll(other.types_);
          }
          onChanged();
        }
        if (!other.ids_.isEmpty()) {
          if (ids_.isEmpty()) {
            ids_ = other.ids_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureIdsIsMutable();
            ids_.addAll(other.ids_);
          }
          onChanged();
        }
        if (!other.idOffsets_.isEmpty()) {
          if (idOffsets_.isEmpty()) {
            idOffsets_ = other.idOffsets_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureIdOffsetsIsMutable();
            idOffsets_.addAll(other.idOffsets_);
          }
          onChanged();
        }
        if (!other.numElementsWithId_.isEmpty()) {
          if (numElementsWithId_.isEmpty()) {
            numElementsWithId_ = other.numElementsWithId_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureNumElementsWithIdIsMutable();
            numElementsWithId_.addAll(other.numElementsWithId_);
          }
          onChanged();
        }
        if (!other.idToIndex_.isEmpty()) {
          if (idToIndex_.isEmpty()) {
            idToIndex_ = other.idToIndex_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureIdToIndexIsMutable();
            idToIndex_.addAll(other.idToIndex_);
          }
          onChanged();
        }
        if (!other.flags_.isEmpty()) {
          if (flags_.isEmpty()) {
            flags_ = other.flags_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureFlagsIsMutable();
            flags_.addAll(other.flags_);
          }
          onChanged();
        }
        if (!other.centers_.isEmpty()) {
          if (centers_.isEmpty()) {
            centers_ = other.centers_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureCentersIsMutable();
            centers_.addAll(other.centers_);
          }
          onChanged();
        }
        if (!other.lengths_.isEmpty()) {
          if (lengths_.isEmpty()) {
            lengths_ = other.lengths_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureLengthsIsMutable();
            lengths_.addAll(other.lengths_);
          }
          onChanged();
        }
        if (!other.areas_.isEmpty()) {
          if (areas_.isEmpty()) {
            areas_ = other.areas_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureAreasIsMutable();
            areas_.addAll(other.areas_);
          }
          onChanged();
        }
        if (!other.volumes_.isEmpty()) {
          if (volumes_.isEmpty()) {
            volumes_ = other.volumes_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureVolumesIsMutable();
            volumes_.addAll(other.volumes_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Messages.Vector.Elements parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Messages.Vector.Elements) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList indices_ = emptyIntList();
      private void ensureIndicesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          indices_ = mutableCopy(indices_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 indices = 1 [packed = true];</code>
       * @return A list containing the indices.
       */
      public java.util.List<java.lang.Integer>
          getIndicesList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(indices_) : indices_;
      }
      /**
       * <code>repeated int32 indices = 1 [packed = true];</code>
       * @return The count of indices.
       */
      public int getIndicesCount() {
        return indices_.size();
      }
      /**
       * <code>repeated int32 indices = 1 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The indices at the given index.
       */
      public int getIndices(int index) {
        return indices_.getInt(index);
      }
      /**
       * <code>repeated int32 indices = 1 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The indices to set.
       * @return This builder for chaining.
       */
      public Builder setIndices(
          int index, int value) {
        ensureIndicesIsMutable();
        indices_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 indices = 1 [packed = true];</code>
       * @param value The indices to add.
       * @return This builder for chaining.
       */
      public Builder addIndices(int value) {
        ensureIndicesIsMutable();
        indices_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 indices = 1 [packed = true];</code>
       * @param values The indices to add.
       * @return This builder for chaining.
       */
      public Builder addAllIndices(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIndicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, indices_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 indices = 1 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearIndices() {
        indices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList strides_ = emptyIntList();
      private void ensureStridesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          strides_ = mutableCopy(strides_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 strides = 2 [packed = true];</code>
       * @return A list containing the strides.
       */
      public java.util.List<java.lang.Integer>
          getStridesList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(strides_) : strides_;
      }
      /**
       * <code>repeated int32 strides = 2 [packed = true];</code>
       * @return The count of strides.
       */
      public int getStridesCount() {
        return strides_.size();
      }
      /**
       * <code>repeated int32 strides = 2 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The strides at the given index.
       */
      public int getStrides(int index) {
        return strides_.getInt(index);
      }
      /**
       * <code>repeated int32 strides = 2 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The strides to set.
       * @return This builder for chaining.
       */
      public Builder setStrides(
          int index, int value) {
        ensureStridesIsMutable();
        strides_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 strides = 2 [packed = true];</code>
       * @param value The strides to add.
       * @return This builder for chaining.
       */
      public Builder addStrides(int value) {
        ensureStridesIsMutable();
        strides_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 strides = 2 [packed = true];</code>
       * @param values The strides to add.
       * @return This builder for chaining.
       */
      public Builder addAllStrides(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStridesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, strides_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 strides = 2 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearStrides() {
        strides_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList offsets_ = emptyIntList();
      private void ensureOffsetsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          offsets_ = mutableCopy(offsets_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 offsets = 3 [packed = true];</code>
       * @return A list containing the offsets.
       */
      public java.util.List<java.lang.Integer>
          getOffsetsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(offsets_) : offsets_;
      }
      /**
       * <code>repeated int32 offsets = 3 [packed = true];</code>
       * @return The count of offsets.
       */
      public int getOffsetsCount() {
        return offsets_.size();
      }
      /**
       * <code>repeated int32 offsets = 3 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The offsets at the given index.
       */
      public int getOffsets(int index) {
        return offsets_.getInt(index);
      }
      /**
       * <code>repeated int32 offsets = 3 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The offsets to set.
       * @return This builder for chaining.
       */
      public Builder setOffsets(
          int index, int value) {
        ensureOffsetsIsMutable();
        offsets_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 offsets = 3 [packed = true];</code>
       * @param value The offsets to add.
       * @return This builder for chaining.
       */
      public Builder addOffsets(int value) {
        ensureOffsetsIsMutable();
        offsets_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 offsets = 3 [packed = true];</code>
       * @param values The offsets to add.
       * @return This builder for chaining.
       */
      public Builder addAllOffsets(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOffsetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, offsets_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 offsets = 3 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearOffsets() {
        offsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList types_ = emptyIntList();
      private void ensureTypesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          types_ = mutableCopy(types_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 types = 4 [packed = true];</code>
       * @return A list containing the types.
       */
      public java.util.List<java.lang.Integer>
          getTypesList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(types_) : types_;
      }
      /**
       * <code>repeated int32 types = 4 [packed = true];</code>
       * @return The count of types.
       */
      public int getTypesCount() {
        return types_.size();
      }
      /**
       * <code>repeated int32 types = 4 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The types at the given index.
       */
      public int getTypes(int index) {
        return types_.getInt(index);
      }
      /**
       * <code>repeated int32 types = 4 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The types to set.
       * @return This builder for chaining.
       */
      public Builder setTypes(
          int index, int value) {
        ensureTypesIsMutable();
        types_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 types = 4 [packed = true];</code>
       * @param value The types to add.
       * @return This builder for chaining.
       */
      public Builder addTypes(int value) {
        ensureTypesIsMutable();
        types_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 types = 4 [packed = true];</code>
       * @param values The types to add.
       * @return This builder for chaining.
       */
      public Builder addAllTypes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, types_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 types = 4 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearTypes() {
        types_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList ids_ = emptyIntList();
      private void ensureIdsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          ids_ = mutableCopy(ids_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 ids = 5 [packed = true];</code>
       * @return A list containing the ids.
       */
      public java.util.List<java.lang.Integer>
          getIdsList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(ids_) : ids_;
      }
      /**
       * <code>repeated int32 ids = 5 [packed = true];</code>
       * @return The count of ids.
       */
      public int getIdsCount() {
        return ids_.size();
      }
      /**
       * <code>repeated int32 ids = 5 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The ids at the given index.
       */
      public int getIds(int index) {
        return ids_.getInt(index);
      }
      /**
       * <code>repeated int32 ids = 5 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The ids to set.
       * @return This builder for chaining.
       */
      public Builder setIds(
          int index, int value) {
        ensureIdsIsMutable();
        ids_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ids = 5 [packed = true];</code>
       * @param value The ids to add.
       * @return This builder for chaining.
       */
      public Builder addIds(int value) {
        ensureIdsIsMutable();
        ids_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ids = 5 [packed = true];</code>
       * @param values The ids to add.
       * @return This builder for chaining.
       */
      public Builder addAllIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ids_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ids = 5 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearIds() {
        ids_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList idOffsets_ = emptyIntList();
      private void ensureIdOffsetsIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          idOffsets_ = mutableCopy(idOffsets_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 id_offsets = 6 [packed = true];</code>
       * @return A list containing the idOffsets.
       */
      public java.util.List<java.lang.Integer>
          getIdOffsetsList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(idOffsets_) : idOffsets_;
      }
      /**
       * <code>repeated int32 id_offsets = 6 [packed = true];</code>
       * @return The count of idOffsets.
       */
      public int getIdOffsetsCount() {
        return idOffsets_.size();
      }
      /**
       * <code>repeated int32 id_offsets = 6 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The idOffsets at the given index.
       */
      public int getIdOffsets(int index) {
        return idOffsets_.getInt(index);
      }
      /**
       * <code>repeated int32 id_offsets = 6 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The idOffsets to set.
       * @return This builder for chaining.
       */
      public Builder setIdOffsets(
          int index, int value) {
        ensureIdOffsetsIsMutable();
        idOffsets_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 id_offsets = 6 [packed = true];</code>
       * @param value The idOffsets to add.
       * @return This builder for chaining.
       */
      public Builder addIdOffsets(int value) {
        ensureIdOffsetsIsMutable();
        idOffsets_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 id_offsets = 6 [packed = true];</code>
       * @param values The idOffsets to add.
       * @return This builder for chaining.
       */
      public Builder addAllIdOffsets(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIdOffsetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, idOffsets_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 id_offsets = 6 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearIdOffsets() {
        idOffsets_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList numElementsWithId_ = emptyIntList();
      private void ensureNumElementsWithIdIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          numElementsWithId_ = mutableCopy(numElementsWithId_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
       * @return A list containing the numElementsWithId.
       */
      public java.util.List<java.lang.Integer>
          getNumElementsWithIdList() {
        return ((bitField0_ & 0x00000040) != 0) ?
                 java.util.Collections.unmodifiableList(numElementsWithId_) : numElementsWithId_;
      }
      /**
       * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
       * @return The count of numElementsWithId.
       */
      public int getNumElementsWithIdCount() {
        return numElementsWithId_.size();
      }
      /**
       * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The numElementsWithId at the given index.
       */
      public int getNumElementsWithId(int index) {
        return numElementsWithId_.getInt(index);
      }
      /**
       * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The numElementsWithId to set.
       * @return This builder for chaining.
       */
      public Builder setNumElementsWithId(
          int index, int value) {
        ensureNumElementsWithIdIsMutable();
        numElementsWithId_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
       * @param value The numElementsWithId to add.
       * @return This builder for chaining.
       */
      public Builder addNumElementsWithId(int value) {
        ensureNumElementsWithIdIsMutable();
        numElementsWithId_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
       * @param values The numElementsWithId to add.
       * @return This builder for chaining.
       */
      public Builder addAllNumElementsWithId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNumElementsWithIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, numElementsWithId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 num_elements_with_id = 7 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearNumElementsWithId() {
        numElementsWithId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList idToIndex_ = emptyIntList();
      private void ensureIdToIndexIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          idToIndex_ = mutableCopy(idToIndex_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 id_to_index = 8 [packed = true];</code>
       * @return A list containing the idToIndex.
       */
      public java.util.List<java.lang.Integer>
          getIdToIndexList() {
        return ((bitField0_ & 0x00000080) != 0) ?
                 java.util.Collections.unmodifiableList(idToIndex_) : idToIndex_;
      }
      /**
       * <code>repeated int32 id_to_index = 8 [packed = true];</code>
       * @return The count of idToIndex.
       */
      public int getIdToIndexCount() {
        return idToIndex_.size();
      }
      /**
       * <code>repeated int32 id_to_index = 8 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The idToIndex at the given index.
       */
      public int getIdToIndex(int index) {
        return idToIndex_.getInt(index);
      }
      /**
       * <code>repeated int32 id_to_index = 8 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The idToIndex to set.
       * @return This builder for chaining.
       */
      public Builder setIdToIndex(
          int index, int value) {
        ensureIdToIndexIsMutable();
        idToIndex_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 id_to_index = 8 [packed = true];</code>
       * @param value The idToIndex to add.
       * @return This builder for chaining.
       */
      public Builder addIdToIndex(int value) {
        ensureIdToIndexIsMutable();
        idToIndex_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 id_to_index = 8 [packed = true];</code>
       * @param values The idToIndex to add.
       * @return This builder for chaining.
       */
      public Builder addAllIdToIndex(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIdToIndexIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, idToIndex_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 id_to_index = 8 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearIdToIndex() {
        idToIndex_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList flags_ = emptyIntList();
      private void ensureFlagsIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          flags_ = mutableCopy(flags_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 flags = 9 [packed = true];</code>
       * @return A list containing the flags.
       */
      public java.util.List<java.lang.Integer>
          getFlagsList() {
        return ((bitField0_ & 0x00000100) != 0) ?
                 java.util.Collections.unmodifiableList(flags_) : flags_;
      }
      /**
       * <code>repeated int32 flags = 9 [packed = true];</code>
       * @return The count of flags.
       */
      public int getFlagsCount() {
        return flags_.size();
      }
      /**
       * <code>repeated int32 flags = 9 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The flags at the given index.
       */
      public int getFlags(int index) {
        return flags_.getInt(index);
      }
      /**
       * <code>repeated int32 flags = 9 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The flags to set.
       * @return This builder for chaining.
       */
      public Builder setFlags(
          int index, int value) {
        ensureFlagsIsMutable();
        flags_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flags = 9 [packed = true];</code>
       * @param value The flags to add.
       * @return This builder for chaining.
       */
      public Builder addFlags(int value) {
        ensureFlagsIsMutable();
        flags_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flags = 9 [packed = true];</code>
       * @param values The flags to add.
       * @return This builder for chaining.
       */
      public Builder addAllFlags(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFlagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, flags_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flags = 9 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearFlags() {
        flags_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList centers_ = emptyDoubleList();
      private void ensureCentersIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          centers_ = mutableCopy(centers_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double centers = 10 [packed = true];</code>
       * @return A list containing the centers.
       */
      public java.util.List<java.lang.Double>
          getCentersList() {
        return ((bitField0_ & 0x00000200) != 0) ?
                 java.util.Collections.unmodifiableList(centers_) : centers_;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double centers = 10 [packed = true];</code>
       * @return The count of centers.
       */
      public int getCentersCount() {
        return centers_.size();
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double centers = 10 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The centers at the given index.
       */
      public double getCenters(int index) {
        return centers_.getDouble(index);
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double centers = 10 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The centers to set.
       * @return This builder for chaining.
       */
      public Builder setCenters(
          int index, double value) {
        ensureCentersIsMutable();
        centers_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double centers = 10 [packed = true];</code>
       * @param value The centers to add.
       * @return This builder for chaining.
       */
      public Builder addCenters(double value) {
        ensureCentersIsMutable();
        centers_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double centers = 10 [packed = true];</code>
       * @param values The centers to add.
       * @return This builder for chaining.
       */
      public Builder addAllCenters(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureCentersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, centers_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double centers = 10 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearCenters() {
        centers_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList lengths_ = emptyDoubleList();
      private void ensureLengthsIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          lengths_ = mutableCopy(lengths_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double lengths = 11 [packed = true];</code>
       * @return A list containing the lengths.
       */
      public java.util.List<java.lang.Double>
          getLengthsList() {
        return ((bitField0_ & 0x00000400) != 0) ?
                 java.util.Collections.unmodifiableList(lengths_) : lengths_;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double lengths = 11 [packed = true];</code>
       * @return The count of lengths.
       */
      public int getLengthsCount() {
        return lengths_.size();
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double lengths = 11 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lengths at the given index.
       */
      public double getLengths(int index) {
        return lengths_.getDouble(index);
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double lengths = 11 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The lengths to set.
       * @return This builder for chaining.
       */
      public Builder setLengths(
          int index, double value) {
        ensureLengthsIsMutable();
        lengths_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double lengths = 11 [packed = true];</code>
       * @param value The lengths to add.
       * @return This builder for chaining.
       */
      public Builder addLengths(double value) {
        ensureLengthsIsMutable();
        lengths_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double lengths = 11 [packed = true];</code>
       * @param values The lengths to add.
       * @return This builder for chaining.
       */
      public Builder addAllLengths(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureLengthsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lengths_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double lengths = 11 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearLengths() {
        lengths_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList areas_ = emptyDoubleList();
      private void ensureAreasIsMutable() {
        if (!((bitField0_ & 0x00000800) != 0)) {
          areas_ = mutableCopy(areas_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double areas = 12 [packed = true];</code>
       * @return A list containing the areas.
       */
      public java.util.List<java.lang.Double>
          getAreasList() {
        return ((bitField0_ & 0x00000800) != 0) ?
                 java.util.Collections.unmodifiableList(areas_) : areas_;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double areas = 12 [packed = true];</code>
       * @return The count of areas.
       */
      public int getAreasCount() {
        return areas_.size();
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double areas = 12 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The areas at the given index.
       */
      public double getAreas(int index) {
        return areas_.getDouble(index);
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double areas = 12 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The areas to set.
       * @return This builder for chaining.
       */
      public Builder setAreas(
          int index, double value) {
        ensureAreasIsMutable();
        areas_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double areas = 12 [packed = true];</code>
       * @param value The areas to add.
       * @return This builder for chaining.
       */
      public Builder addAreas(double value) {
        ensureAreasIsMutable();
        areas_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double areas = 12 [packed = true];</code>
       * @param values The areas to add.
       * @return This builder for chaining.
       */
      public Builder addAllAreas(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureAreasIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, areas_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double areas = 12 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearAreas() {
        areas_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList volumes_ = emptyDoubleList();
      private void ensureVolumesIsMutable() {
        if (!((bitField0_ & 0x00001000) != 0)) {
          volumes_ = mutableCopy(volumes_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double volumes = 13 [packed = true];</code>
       * @return A list containing the volumes.
       */
      public java.util.List<java.lang.Double>
          getVolumesList() {
        return ((bitField0_ & 0x00001000) != 0) ?
                 java.util.Collections.unmodifiableList(volumes_) : volumes_;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double volumes = 13 [packed = true];</code>
       * @return The count of volumes.
       */
      public int getVolumesCount() {
        return volumes_.size();
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double volumes = 13 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The volumes at the given index.
       */
      public double getVolumes(int index) {
        return volumes_.getDouble(index);
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double volumes = 13 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The volumes to set.
       * @return This builder for chaining.
       */
      public Builder setVolumes(
          int index, double value) {
        ensureVolumesIsMutable();
        volumes_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double volumes = 13 [packed = true];</code>
       * @param value The volumes to add.
       * @return This builder for chaining.
       */
      public Builder addVolumes(double value) {
        ensureVolumesIsMutable();
        volumes_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double volumes = 13 [packed = true];</code>
       * @param values The volumes to add.
       * @return This builder for chaining.
       */
      public Builder addAllVolumes(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureVolumesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, volumes_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>repeated double volumes = 13 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearVolumes() {
        volumes_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Messages.Elements)
    }

    // @@protoc_insertion_point(class_scope:Messages.Elements)
    private static final Messages.Vector.Elements DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Messages.Vector.Elements();
    }

    public static Messages.Vector.Elements getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Elements>
        PARSER = new com.google.protobuf.AbstractParser<Elements>() {
      @java.lang.Override
      public Elements parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Elements(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Elements> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Elements> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Messages.Vector.Elements getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Messages_Revision_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Messages_Revision_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Messages_Extrema_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Messages_Extrema_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Messages_Vector32_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Messages_Vector32_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Messages_Vector64_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Messages_Vector64_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Messages_Indices_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Messages_Indices_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Messages_Elements_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Messages_Elements_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014vector.proto\022\010Messages\"0\n\010Revision\022\021\n\t" +
      "major_rev\030\001 \001(\003\022\021\n\tminor_rev\030\002 \001(\003\"I\n\007Ex" +
      "trema\022\014\n\004dims\030\001 \001(\005\022\017\n\003min\030\002 \003(\001B\002\020\001\022\017\n\003" +
      "max\030\003 \003(\001B\002\020\001\022\016\n\006is_set\030\004 \001(\010\"\212\001\n\010Vector" +
      "32\022\014\n\004name\030\001 \001(\t\022\022\n\ncomponents\030\002 \001(\005\022\023\n\013" +
      "interleaved\030\003 \001(\010\022$\n\010revision\030\004 \001(\0132\022.Me" +
      "ssages.Revision\022\r\n\005units\030\005 \001(\t\022\022\n\006values" +
      "\030\n \003(\002B\002\020\001\"\212\001\n\010Vector64\022\014\n\004name\030\001 \001(\t\022\022\n" +
      "\ncomponents\030\002 \001(\005\022\023\n\013interleaved\030\003 \001(\010\022$" +
      "\n\010revision\030\004 \001(\0132\022.Messages.Revision\022\r\n\005" +
      "units\030\005 \001(\t\022\022\n\006values\030\n \003(\001B\002\020\001\"+\n\007Indic" +
      "es\022\014\n\004name\030\001 \001(\t\022\022\n\006values\030\002 \003(\005B\002\020\001\"\245\002\n" +
      "\010Elements\022\023\n\007indices\030\001 \003(\005B\002\020\001\022\023\n\007stride" +
      "s\030\002 \003(\005B\002\020\001\022\023\n\007offsets\030\003 \003(\005B\002\020\001\022\021\n\005type" +
      "s\030\004 \003(\005B\002\020\001\022\017\n\003ids\030\005 \003(\005B\002\020\001\022\026\n\nid_offse" +
      "ts\030\006 \003(\005B\002\020\001\022 \n\024num_elements_with_id\030\007 \003" +
      "(\005B\002\020\001\022\027\n\013id_to_index\030\010 \003(\005B\002\020\001\022\021\n\005flags" +
      "\030\t \003(\005B\002\020\001\022\023\n\007centers\030\n \003(\001B\002\020\001\022\023\n\007lengt" +
      "hs\030\013 \003(\001B\002\020\001\022\021\n\005areas\030\014 \003(\001B\002\020\001\022\023\n\007volum" +
      "es\030\r \003(\001B\002\020\001B\003\370\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Messages_Revision_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Messages_Revision_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Messages_Revision_descriptor,
        new java.lang.String[] { "MajorRev", "MinorRev", });
    internal_static_Messages_Extrema_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Messages_Extrema_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Messages_Extrema_descriptor,
        new java.lang.String[] { "Dims", "Min", "Max", "IsSet", });
    internal_static_Messages_Vector32_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Messages_Vector32_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Messages_Vector32_descriptor,
        new java.lang.String[] { "Name", "Components", "Interleaved", "Revision", "Units", "Values", });
    internal_static_Messages_Vector64_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Messages_Vector64_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Messages_Vector64_descriptor,
        new java.lang.String[] { "Name", "Components", "Interleaved", "Revision", "Units", "Values", });
    internal_static_Messages_Indices_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Messages_Indices_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Messages_Indices_descriptor,
        new java.lang.String[] { "Name", "Values", });
    internal_static_Messages_Elements_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Messages_Elements_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Messages_Elements_descriptor,
        new java.lang.String[] { "Indices", "Strides", "Offsets", "Types", "Ids", "IdOffsets", "NumElementsWithId", "IdToIndex", "Flags", "Centers", "Lengths", "Areas", "Volumes", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
