<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: meta.proto

namespace Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Messages.GraphicsControl</code>
 */
class GraphicsControl extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int32 style = 1;</code>
     */
    private $style = 0;
    /**
     * Generated from protobuf field <code>int32 encoding = 2;</code>
     */
    private $encoding = 0;
    /**
     *reserved
     *
     * Generated from protobuf field <code>repeated float color = 4;</code>
     */
    private $color;
    /**
     * Generated from protobuf field <code>float alpha = 5;</code>
     */
    private $alpha = 0.0;
    /**
     * Generated from protobuf field <code>float point_width = 6;</code>
     */
    private $point_width = 0.0;
    /**
     * Generated from protobuf field <code>float line_width = 7;</code>
     */
    private $line_width = 0.0;
    /**
     *reserved
     *
     * Generated from protobuf field <code>bool visible = 10;</code>
     */
    private $visible = false;
    /**
     * Generated from protobuf field <code>bool overlay = 11;</code>
     */
    private $overlay = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $style
     *     @type int $encoding
     *     @type float[]|\Google\Protobuf\Internal\RepeatedField $color
     *          reserved
     *     @type float $alpha
     *     @type float $point_width
     *     @type float $line_width
     *     @type bool $visible
     *          reserved
     *     @type bool $overlay
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Meta::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int32 style = 1;</code>
     * @return int
     */
    public function getStyle()
    {
        return $this->style;
    }

    /**
     * Generated from protobuf field <code>int32 style = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setStyle($var)
    {
        GPBUtil::checkInt32($var);
        $this->style = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 encoding = 2;</code>
     * @return int
     */
    public function getEncoding()
    {
        return $this->encoding;
    }

    /**
     * Generated from protobuf field <code>int32 encoding = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setEncoding($var)
    {
        GPBUtil::checkInt32($var);
        $this->encoding = $var;

        return $this;
    }

    /**
     *reserved
     *
     * Generated from protobuf field <code>repeated float color = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getColor()
    {
        return $this->color;
    }

    /**
     *reserved
     *
     * Generated from protobuf field <code>repeated float color = 4;</code>
     * @param float[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setColor($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FLOAT);
        $this->color = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float alpha = 5;</code>
     * @return float
     */
    public function getAlpha()
    {
        return $this->alpha;
    }

    /**
     * Generated from protobuf field <code>float alpha = 5;</code>
     * @param float $var
     * @return $this
     */
    public function setAlpha($var)
    {
        GPBUtil::checkFloat($var);
        $this->alpha = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float point_width = 6;</code>
     * @return float
     */
    public function getPointWidth()
    {
        return $this->point_width;
    }

    /**
     * Generated from protobuf field <code>float point_width = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setPointWidth($var)
    {
        GPBUtil::checkFloat($var);
        $this->point_width = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float line_width = 7;</code>
     * @return float
     */
    public function getLineWidth()
    {
        return $this->line_width;
    }

    /**
     * Generated from protobuf field <code>float line_width = 7;</code>
     * @param float $var
     * @return $this
     */
    public function setLineWidth($var)
    {
        GPBUtil::checkFloat($var);
        $this->line_width = $var;

        return $this;
    }

    /**
     *reserved
     *
     * Generated from protobuf field <code>bool visible = 10;</code>
     * @return bool
     */
    public function getVisible()
    {
        return $this->visible;
    }

    /**
     *reserved
     *
     * Generated from protobuf field <code>bool visible = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setVisible($var)
    {
        GPBUtil::checkBool($var);
        $this->visible = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool overlay = 11;</code>
     * @return bool
     */
    public function getOverlay()
    {
        return $this->overlay;
    }

    /**
     * Generated from protobuf field <code>bool overlay = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setOverlay($var)
    {
        GPBUtil::checkBool($var);
        $this->overlay = $var;

        return $this;
    }

}

