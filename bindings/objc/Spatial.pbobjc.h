// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spatial.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Elements;
@class Extrema;
@class Revision;
@class Vector64;
@class Zone;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - SpatialRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface SpatialRoot : GPBRootObject
@end

#pragma mark - Zone

typedef GPB_ENUM(Zone_FieldNumber) {
  Zone_FieldNumber_Name = 1,
  Zone_FieldNumber_Id_p = 2,
  Zone_FieldNumber_Dimensionality = 3,
  Zone_FieldNumber_NumElements = 5,
  Zone_FieldNumber_Offset = 6,
  Zone_FieldNumber_Comments = 7,
  Zone_FieldNumber_Info = 8,
  Zone_FieldNumber_Bounds = 10,
  Zone_FieldNumber_TerminalPositionArray = 11,
  Zone_FieldNumber_SpecificElementsArray = 12,
};

/**
 * compatible with xcompute Region
 **/
GPB_FINAL @interface Zone : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) int32_t dimensionality;

/** reserved */
@property(nonatomic, readwrite) int64_t numElements;

@property(nonatomic, readwrite) int64_t offset;

@property(nonatomic, readwrite, copy, null_resettable) NSString *comments;

@property(nonatomic, readwrite, copy, null_resettable) NSString *info;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) Extrema *bounds;
/** Test to see if @c bounds has been set. */
@property(nonatomic, readwrite) BOOL hasBounds;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *terminalPositionArray;
/** The number of items in @c terminalPositionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger terminalPositionArray_Count;

/** optional (if used, ignore offset) */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *specificElementsArray;
/** The number of items in @c specificElementsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger specificElementsArray_Count;

@end

#pragma mark - Topology

typedef GPB_ENUM(Topology_FieldNumber) {
  Topology_FieldNumber_Name = 1,
  Topology_FieldNumber_Type = 2,
  Topology_FieldNumber_Ndim = 3,
  Topology_FieldNumber_Basis = 4,
  Topology_FieldNumber_ResolutionArray = 8,
  Topology_FieldNumber_DataArray = 9,
  Topology_FieldNumber_Nodes = 10,
  Topology_FieldNumber_Edges = 11,
  Topology_FieldNumber_InteriorEdges = 12,
  Topology_FieldNumber_Faces = 13,
  Topology_FieldNumber_InteriorFaces = 14,
  Topology_FieldNumber_Cells = 15,
  Topology_FieldNumber_GroupsArray = 20,
  Topology_FieldNumber_LoopsArray = 21,
  Topology_FieldNumber_SurfacesArray = 22,
  Topology_FieldNumber_VolumesArray = 23,
  Topology_FieldNumber_LocationsArray = 26,
  Topology_FieldNumber_Filename = 30,
  Topology_FieldNumber_Revision = 31,
};

/**
 * compatible with xcompute Geometry
 **/
GPB_FINAL @interface Topology : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) int32_t ndim;

@property(nonatomic, readwrite) int32_t basis;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *resolutionArray;
/** The number of items in @c resolutionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger resolutionArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Vector64*> *dataArray;
/** The number of items in @c dataArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dataArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Elements *nodes;
/** Test to see if @c nodes has been set. */
@property(nonatomic, readwrite) BOOL hasNodes;

@property(nonatomic, readwrite, strong, null_resettable) Elements *edges;
/** Test to see if @c edges has been set. */
@property(nonatomic, readwrite) BOOL hasEdges;

@property(nonatomic, readwrite, strong, null_resettable) Elements *interiorEdges;
/** Test to see if @c interiorEdges has been set. */
@property(nonatomic, readwrite) BOOL hasInteriorEdges;

@property(nonatomic, readwrite, strong, null_resettable) Elements *faces;
/** Test to see if @c faces has been set. */
@property(nonatomic, readwrite) BOOL hasFaces;

@property(nonatomic, readwrite, strong, null_resettable) Elements *interiorFaces;
/** Test to see if @c interiorFaces has been set. */
@property(nonatomic, readwrite) BOOL hasInteriorFaces;

@property(nonatomic, readwrite, strong, null_resettable) Elements *cells;
/** Test to see if @c cells has been set. */
@property(nonatomic, readwrite) BOOL hasCells;

/** reserveed */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Zone*> *groupsArray;
/** The number of items in @c groupsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Zone*> *loopsArray;
/** The number of items in @c loopsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger loopsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Zone*> *surfacesArray;
/** The number of items in @c surfacesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger surfacesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Zone*> *volumesArray;
/** The number of items in @c volumesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger volumesArray_Count;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *locationsArray;
/** The number of items in @c locationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger locationsArray_Count;

/** reserved */
@property(nonatomic, readwrite, copy, null_resettable) NSString *filename;

@property(nonatomic, readwrite, strong, null_resettable) Revision *revision;
/** Test to see if @c revision has been set. */
@property(nonatomic, readwrite) BOOL hasRevision;

@end

#pragma mark - GridControl

typedef GPB_ENUM(GridControl_FieldNumber) {
  GridControl_FieldNumber_Basis = 1,
  GridControl_FieldNumber_SizeArray = 2,
  GridControl_FieldNumber_SpacingArray = 3,
  GridControl_FieldNumber_GradingArray = 4,
  GridControl_FieldNumber_Bounds = 10,
};

GPB_FINAL @interface GridControl : GPBMessage

@property(nonatomic, readwrite) int32_t basis;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *sizeArray;
/** The number of items in @c sizeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sizeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *spacingArray;
/** The number of items in @c spacingArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger spacingArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *gradingArray;
/** The number of items in @c gradingArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gradingArray_Count;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) Extrema *bounds;
/** Test to see if @c bounds has been set. */
@property(nonatomic, readwrite) BOOL hasBounds;

@end

#pragma mark - MeshControl

typedef GPB_ENUM(MeshControl_FieldNumber) {
  MeshControl_FieldNumber_TargetN = 1,
  MeshControl_FieldNumber_MaxIterations = 2,
  MeshControl_FieldNumber_SizeRatio = 3,
  MeshControl_FieldNumber_SizeDecay = 4,
  MeshControl_FieldNumber_SizeExponent = 5,
  MeshControl_FieldNumber_CurvRatio = 6,
  MeshControl_FieldNumber_CurvDecay = 7,
  MeshControl_FieldNumber_CurvExponent = 8,
  MeshControl_FieldNumber_NodeRadius = 9,
  MeshControl_FieldNumber_Bounds = 10,
  MeshControl_FieldNumber_Interior = 12,
  MeshControl_FieldNumber_Exterior = 13,
  MeshControl_FieldNumber_Shell = 14,
  MeshControl_FieldNumber_Equalize = 15,
  MeshControl_FieldNumber_Smooth = 16,
  MeshControl_FieldNumber_IncludeBackground = 18,
  MeshControl_FieldNumber_KeepExistingPoints = 19,
  MeshControl_FieldNumber_XSymmetry = 24,
  MeshControl_FieldNumber_YSymmetry = 25,
  MeshControl_FieldNumber_ZSymmetry = 26,
  MeshControl_FieldNumber_BackgroundN = 30,
};

GPB_FINAL @interface MeshControl : GPBMessage

@property(nonatomic, readwrite) int64_t targetN;

@property(nonatomic, readwrite) int32_t maxIterations;

@property(nonatomic, readwrite) double sizeRatio;

@property(nonatomic, readwrite) double sizeDecay;

@property(nonatomic, readwrite) double sizeExponent;

@property(nonatomic, readwrite) double curvRatio;

@property(nonatomic, readwrite) double curvDecay;

@property(nonatomic, readwrite) double curvExponent;

@property(nonatomic, readwrite) double nodeRadius;

@property(nonatomic, readwrite, strong, null_resettable) Extrema *bounds;
/** Test to see if @c bounds has been set. */
@property(nonatomic, readwrite) BOOL hasBounds;

/** reserved */
@property(nonatomic, readwrite) BOOL interior;

@property(nonatomic, readwrite) BOOL exterior;

@property(nonatomic, readwrite) BOOL shell;

@property(nonatomic, readwrite) BOOL equalize;

@property(nonatomic, readwrite) BOOL smooth;

/** reserved */
@property(nonatomic, readwrite) BOOL includeBackground;

@property(nonatomic, readwrite) BOOL keepExistingPoints;

/** reserved */
@property(nonatomic, readwrite) BOOL xSymmetry;

@property(nonatomic, readwrite) BOOL ySymmetry;

@property(nonatomic, readwrite) BOOL zSymmetry;

/** reserved */
@property(nonatomic, readwrite) int64_t backgroundN;

@end

#pragma mark - TreeControl

typedef GPB_ENUM(TreeControl_FieldNumber) {
  TreeControl_FieldNumber_MinDepth = 1,
  TreeControl_FieldNumber_MaxDepth = 2,
  TreeControl_FieldNumber_MaxSize = 3,
  TreeControl_FieldNumber_Bounds = 10,
};

GPB_FINAL @interface TreeControl : GPBMessage

@property(nonatomic, readwrite) int32_t minDepth;

@property(nonatomic, readwrite) int32_t maxDepth;

@property(nonatomic, readwrite) int64_t maxSize;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) Extrema *bounds;
/** Test to see if @c bounds has been set. */
@property(nonatomic, readwrite) BOOL hasBounds;

@end

#pragma mark - NetworkControl

GPB_FINAL @interface NetworkControl : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
