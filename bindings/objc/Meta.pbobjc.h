// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Extrema;
@class GraphicsControl;
@class Representation;
@class Revision;
@class Visual;
@class Zone;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MetaRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface MetaRoot : GPBRootObject
@end

#pragma mark - Representation

typedef GPB_ENUM(Representation_FieldNumber) {
  Representation_FieldNumber_PropertyKey = 1,
  Representation_FieldNumber_ColorMap = 2,
  Representation_FieldNumber_Component = 3,
  Representation_FieldNumber_AutoRange = 4,
  Representation_FieldNumber_UseDefaultKey = 5,
  Representation_FieldNumber_ColorOutOfRange = 6,
  Representation_FieldNumber_UseMagnitude = 7,
  Representation_FieldNumber_ShowDisplacement = 8,
  Representation_FieldNumber_RangeArray = 10,
  Representation_FieldNumber_DisplacementScaleArray = 11,
};

GPB_FINAL @interface Representation : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *propertyKey;

@property(nonatomic, readwrite) int32_t colorMap;

@property(nonatomic, readwrite) int32_t component;

@property(nonatomic, readwrite) BOOL autoRange;

@property(nonatomic, readwrite) BOOL useDefaultKey;

@property(nonatomic, readwrite) BOOL colorOutOfRange;

@property(nonatomic, readwrite) BOOL useMagnitude;

@property(nonatomic, readwrite) BOOL showDisplacement;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *rangeArray;
/** The number of items in @c rangeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rangeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *displacementScaleArray;
/** The number of items in @c displacementScaleArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger displacementScaleArray_Count;

@end

#pragma mark - Visual

typedef GPB_ENUM(Visual_FieldNumber) {
  Visual_FieldNumber_Region = 1,
  Visual_FieldNumber_Representation = 2,
  Visual_FieldNumber_Style = 3,
  Visual_FieldNumber_PointsArray = 4,
  Visual_FieldNumber_LinesArray = 5,
  Visual_FieldNumber_TrianglesArray = 6,
  Visual_FieldNumber_IndicesPerElementArray = 8,
  Visual_FieldNumber_ElementsToIndicesArray = 9,
  Visual_FieldNumber_IndicesToElementsArray = 10,
};

GPB_FINAL @interface Visual : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Zone *region;
/** Test to see if @c region has been set. */
@property(nonatomic, readwrite) BOOL hasRegion;

@property(nonatomic, readwrite, strong, null_resettable) Representation *representation;
/** Test to see if @c representation has been set. */
@property(nonatomic, readwrite) BOOL hasRepresentation;

@property(nonatomic, readwrite) int32_t style;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *pointsArray;
/** The number of items in @c pointsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pointsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *linesArray;
/** The number of items in @c linesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger linesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *trianglesArray;
/** The number of items in @c trianglesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger trianglesArray_Count;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *indicesPerElementArray;
/** The number of items in @c indicesPerElementArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger indicesPerElementArray_Count;

/** only used on composite elements (e.g. QUAD4 represented using triangles) */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *elementsToIndicesArray;
/** The number of items in @c elementsToIndicesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger elementsToIndicesArray_Count;

/** only used on composite elements (e.g. QUAD4 represented using triangles) */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *indicesToElementsArray;
/** The number of items in @c indicesToElementsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger indicesToElementsArray_Count;

@end

#pragma mark - GraphicsControl

typedef GPB_ENUM(GraphicsControl_FieldNumber) {
  GraphicsControl_FieldNumber_Style = 1,
  GraphicsControl_FieldNumber_Encoding = 2,
  GraphicsControl_FieldNumber_ColorArray = 4,
  GraphicsControl_FieldNumber_Alpha = 5,
  GraphicsControl_FieldNumber_PointWidth = 6,
  GraphicsControl_FieldNumber_LineWidth = 7,
  GraphicsControl_FieldNumber_Visible = 10,
  GraphicsControl_FieldNumber_Overlay = 11,
};

GPB_FINAL @interface GraphicsControl : GPBMessage

@property(nonatomic, readwrite) int32_t style;

@property(nonatomic, readwrite) int32_t encoding;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *colorArray;
/** The number of items in @c colorArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger colorArray_Count;

@property(nonatomic, readwrite) float alpha;

@property(nonatomic, readwrite) float pointWidth;

@property(nonatomic, readwrite) float lineWidth;

/** reserved */
@property(nonatomic, readwrite) BOOL visible;

@property(nonatomic, readwrite) BOOL overlay;

@end

#pragma mark - SliceControl

typedef GPB_ENUM(SliceControl_FieldNumber) {
  SliceControl_FieldNumber_Visual = 1,
  SliceControl_FieldNumber_Intersect = 3,
  SliceControl_FieldNumber_Negative = 4,
  SliceControl_FieldNumber_Positive = 5,
  SliceControl_FieldNumber_CenterArray = 8,
  SliceControl_FieldNumber_NormalArray = 9,
};

GPB_FINAL @interface SliceControl : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Visual *visual;
/** Test to see if @c visual has been set. */
@property(nonatomic, readwrite) BOOL hasVisual;

/** reserved */
@property(nonatomic, readwrite) BOOL intersect;

@property(nonatomic, readwrite) BOOL negative;

@property(nonatomic, readwrite) BOOL positive;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *centerArray;
/** The number of items in @c centerArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger centerArray_Count;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *normalArray;
/** The number of items in @c normalArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger normalArray_Count;

@end

#pragma mark - TracersControl

typedef GPB_ENUM(TracersControl_FieldNumber) {
  TracersControl_FieldNumber_Visual = 1,
  TracersControl_FieldNumber_ParticleCount = 3,
  TracersControl_FieldNumber_Seed = 4,
  TracersControl_FieldNumber_SpawnRegionArray = 5,
  TracersControl_FieldNumber_RegenRegionArray = 6,
  TracersControl_FieldNumber_UserDefinedPositionsArray = 8,
};

GPB_FINAL @interface TracersControl : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Visual *visual;
/** Test to see if @c visual has been set. */
@property(nonatomic, readwrite) BOOL hasVisual;

/** reserved */
@property(nonatomic, readwrite) int64_t particleCount;

@property(nonatomic, readwrite) int64_t seed;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *spawnRegionArray;
/** The number of items in @c spawnRegionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger spawnRegionArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *regenRegionArray;
/** The number of items in @c regenRegionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger regenRegionArray_Count;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *userDefinedPositionsArray;
/** The number of items in @c userDefinedPositionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userDefinedPositionsArray_Count;

@end

#pragma mark - Meta

typedef GPB_ENUM(Meta_FieldNumber) {
  Meta_FieldNumber_Name = 1,
  Meta_FieldNumber_Icon = 2,
  Meta_FieldNumber_Owner = 3,
  Meta_FieldNumber_Comments = 4,
  Meta_FieldNumber_Series = 5,
  Meta_FieldNumber_SysInfo = 6,
  Meta_FieldNumber_GeomInfo = 7,
  Meta_FieldNumber_Directory = 8,
  Meta_FieldNumber_Uid = 9,
  Meta_FieldNumber_Parent = 10,
  Meta_FieldNumber_Created = 11,
  Meta_FieldNumber_Saved = 12,
  Meta_FieldNumber_Modified = 13,
  Meta_FieldNumber_Iteration = 14,
  Meta_FieldNumber_SaveInterval = 15,
  Meta_FieldNumber_Enabled = 16,
  Meta_FieldNumber_Locked = 17,
  Meta_FieldNumber_AutoSave = 18,
  Meta_FieldNumber_Revision = 20,
  Meta_FieldNumber_Version = 21,
  Meta_FieldNumber_Bounds = 22,
  Meta_FieldNumber_Appearance = 24,
  Meta_FieldNumber_ChildrenArray = 25,
  Meta_FieldNumber_GroupsArray = 26,
  Meta_FieldNumber_LoopsArray = 27,
  Meta_FieldNumber_SurfacesArray = 28,
  Meta_FieldNumber_VolumesArray = 29,
  Meta_FieldNumber_ModelTransformArray = 30,
  Meta_FieldNumber_PropertiesArray = 31,
};

/**
 * metaobject backbone -- created and staged in server visuals (for transmission) to populate client metaobjects
 **/
GPB_FINAL @interface Meta : GPBMessage

/** unique identifier that persists between sessions */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@property(nonatomic, readwrite, copy, null_resettable) NSString *owner;

@property(nonatomic, readwrite, copy, null_resettable) NSString *comments;

@property(nonatomic, readwrite, copy, null_resettable) NSString *series;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sysInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *geomInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *directory;

/** universal id for each system assigned, valid only within a given session */
@property(nonatomic, readwrite) int64_t uid;

@property(nonatomic, readwrite) int64_t parent;

/** unix time */
@property(nonatomic, readwrite) int64_t created;

@property(nonatomic, readwrite) int64_t saved;

@property(nonatomic, readwrite) int64_t modified;

@property(nonatomic, readwrite) int64_t iteration;

@property(nonatomic, readwrite) int64_t saveInterval;

@property(nonatomic, readwrite) BOOL enabled;

@property(nonatomic, readwrite) BOOL locked;

@property(nonatomic, readwrite) BOOL autoSave;

/** reserved */
@property(nonatomic, readwrite, strong, null_resettable) Revision *revision;
/** Test to see if @c revision has been set. */
@property(nonatomic, readwrite) BOOL hasRevision;

@property(nonatomic, readwrite, strong, null_resettable) Revision *version;
/** Test to see if @c version has been set. */
@property(nonatomic, readwrite) BOOL hasVersion;

@property(nonatomic, readwrite, strong, null_resettable) Extrema *bounds;
/** Test to see if @c bounds has been set. */
@property(nonatomic, readwrite) BOOL hasBounds;

@property(nonatomic, readwrite, strong, null_resettable) GraphicsControl *appearance;
/** Test to see if @c appearance has been set. */
@property(nonatomic, readwrite) BOOL hasAppearance;

/** uid's (only good within a given session. see system.proto for persistent relationships) */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *childrenArray;
/** The number of items in @c childrenArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger childrenArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *groupsArray;
/** The number of items in @c groupsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *loopsArray;
/** The number of items in @c loopsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger loopsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *surfacesArray;
/** The number of items in @c surfacesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger surfacesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *volumesArray;
/** The number of items in @c volumesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger volumesArray_Count;

/** dmat4 (aka MAT4 transformation matrix) */
@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *modelTransformArray;
/** The number of items in @c modelTransformArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger modelTransformArray_Count;

/** serialized property-keys, used to request Vector32 or Vector64 data */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *propertiesArray;
/** The number of items in @c propertiesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger propertiesArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
